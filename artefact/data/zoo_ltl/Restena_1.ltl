switch 5 (in5s,out5s,out5s_2) [] {
 rule in5s => out5s []
 }
 final {
 rule in5s => out5s_2 []
 }
switch 10 (in10s,out10s,out10s_2) [] {
 rule in10s => out10s []
 }
 final {
 rule in10s => out10s_2 []
 }
switch 9 (in9s,out9s) [] {
 rule in9s => out9s []
 }
 final {
     
 }
switch 16 (in16s,out16s) [] {
 rule in16s => out16s []
 }
 final {
     
 }
switch 15 (in15s,out15s,out15s_2) [] {
 rule in15s => out15s []
 }
 final {
 rule in15s => out15s_2 []
 }
switch 18 (in18s,out18s_2) [] {

 }
 final {
 rule in18s => out18s_2 []
 }
switch 12 (in12s,out12s_2) [] {

 }
 final {
 rule in12s => out12s_2 []
 }
switch 14 (in14s,out14s_2) [] {

 }
 final {
 rule in14s => out14s_2 []
 }
switch 7 (in7s,out7s) [] {
 rule in7s => out7s []
 }
 final {
 rule in7s => out7s []
 }
link  => in5s []
link out5s => in10s []
link out5s_2 => in10s []
link out10s => in9s []
link out10s_2 => in18s []
link out9s => in16s []
link out16s => in15s []
link out15s => in7s []
link out15s_2 => in7s []
link out18s_2 => in12s []
link out12s_2 => in14s []
link out14s_2 => in15s []
spec
port=in5s -> (!(port=out7s) U ((port=in10s) & (TRUE U (port=out7s))))