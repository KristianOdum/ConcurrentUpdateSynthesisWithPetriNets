switch 31 (in31s,out31s,out31s_2) [] {
 rule in31s => out31s []
 }
 final {
 rule in31s => out31s_2 []
 }
switch 30 (in30s,out30s,out30s_2) [] {
 rule in30s => out30s []
 }
 final {
 rule in30s => out30s_2 []
 }
switch 32 (in32s,out32s,out32s_2) [] {
 rule in32s => out32s []
 }
 final {
 rule in32s => out32s_2 []
 }
switch 14 (in14s,out14s) [] {
 rule in14s => out14s []
 }
 final {
     
 }
switch 53 (in53s,out53s,out53s_2) [] {
 rule in53s => out53s []
 }
 final {
 rule in53s => out53s_2 []
 }
switch 18 (in18s,out18s) [] {
 rule in18s => out18s []
 }
 final {
     
 }
switch 21 (in21s,out21s,out21s_2) [] {
 rule in21s => out21s []
 }
 final {
 rule in21s => out21s_2 []
 }
switch 22 (in22s,out22s,out22s_2) [] {
 rule in22s => out22s []
 }
 final {
 rule in22s => out22s_2 []
 }
switch 8 (in8s,out8s,out8s_2) [] {
 rule in8s => out8s []
 }
 final {
 rule in8s => out8s_2 []
 }
switch 85 (in85s,out85s,out85s_2) [] {
 rule in85s => out85s []
 }
 final {
 rule in85s => out85s_2 []
 }
switch 84 (in84s,out84s,out84s_2) [] {
 rule in84s => out84s []
 }
 final {
 rule in84s => out84s_2 []
 }
switch 86 (in86s,out86s,out86s_2) [] {
 rule in86s => out86s []
 }
 final {
 rule in86s => out86s_2 []
 }
switch 68 (in68s,out68s) [] {
 rule in68s => out68s []
 }
 final {
     
 }
switch 107 (in107s,out107s,out107s_2) [] {
 rule in107s => out107s []
 }
 final {
 rule in107s => out107s_2 []
 }
switch 72 (in72s,out72s) [] {
 rule in72s => out72s []
 }
 final {
     
 }
switch 75 (in75s,out75s,out75s_2) [] {
 rule in75s => out75s []
 }
 final {
 rule in75s => out75s_2 []
 }
switch 76 (in76s,out76s,out76s_2) [] {
 rule in76s => out76s []
 }
 final {
 rule in76s => out76s_2 []
 }
switch 34 (in34s,out34s_2) [] {

 }
 final {
 rule in34s => out34s_2 []
 }
switch 35 (in35s,out35s_2) [] {

 }
 final {
 rule in35s => out35s_2 []
 }
switch 10 (in10s,out10s_2) [] {

 }
 final {
 rule in10s => out10s_2 []
 }
switch 88 (in88s,out88s_2) [] {

 }
 final {
 rule in88s => out88s_2 []
 }
switch 89 (in89s,out89s_2) [] {

 }
 final {
 rule in89s => out89s_2 []
 }
switch 64 (in64s,out64s_2) [] {

 }
 final {
 rule in64s => out64s_2 []
 }
switch 62 (in62s,out62s) [] {
 rule in62s => out62s []
 }
 final {
 rule in62s => out62s []
 }
link  => in31s []
link out31s => in30s []
link out31s_2 => in30s []
link out30s => in32s []
link out30s_2 => in32s []
link out32s => in14s []
link out32s_2 => in34s []
link out14s => in53s []
link out53s => in18s []
link out53s_2 => in10s []
link out18s => in21s []
link out21s => in22s []
link out21s_2 => in22s []
link out22s => in8s []
link out22s_2 => in8s []
link out8s => in85s []
link out8s_2 => in85s []
link out85s => in84s []
link out85s_2 => in84s []
link out84s => in86s []
link out84s_2 => in86s []
link out86s => in68s []
link out86s_2 => in88s []
link out68s => in107s []
link out107s => in72s []
link out107s_2 => in64s []
link out72s => in75s []
link out75s => in76s []
link out75s_2 => in76s []
link out76s => in62s []
link out76s_2 => in62s []
link out34s_2 => in35s []
link out35s_2 => in53s []
link out10s_2 => in21s []
link out88s_2 => in89s []
link out89s_2 => in107s []
link out64s_2 => in75s []
spec
port=in31s -> (!(port=out62s) U ((port=in32s) & (TRUE U (port=out62s))))