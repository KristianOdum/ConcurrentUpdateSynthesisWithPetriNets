switch 2 (in2s,out2s,out2s_2) [] {
 rule in2s => out2s []
 }
 final {
 rule in2s => out2s_2 []
 }
switch 12 (in12s,out12s,out12s_2) [] {
 rule in12s => out12s []
 }
 final {
 rule in12s => out12s_2 []
 }
switch 3 (in3s,out3s) [] {
 rule in3s => out3s []
 }
 final {
     
 }
switch 5 (in5s,out5s) [] {
 rule in5s => out5s []
 }
 final {
     
 }
switch 6 (in6s,out6s) [] {
 rule in6s => out6s []
 }
 final {
     
 }
switch 7 (in7s,out7s) [] {
 rule in7s => out7s []
 }
 final {
     
 }
switch 4 (in4s,out4s_2) [] {

 }
 final {
 rule in4s => out4s_2 []
 }
switch 11 (in11s,out11s_2) [] {

 }
 final {
 rule in11s => out11s_2 []
 }
switch 0 (in0s,out0s_2) [] {

 }
 final {
 rule in0s => out0s_2 []
 }
switch 10 (in10s,out10s_2) [] {

 }
 final {
 rule in10s => out10s_2 []
 }
switch 9 (in9s,out9s_2) [] {

 }
 final {
 rule in9s => out9s_2 []
 }
switch 8 (in8s,out8s) [] {
 rule in8s => out8s []
 }
 final {
 rule in8s => out8s []
 }
link  => in2s []
link out2s => in12s []
link out2s_2 => in12s []
link out12s => in3s []
link out12s_2 => in4s []
link out3s => in5s []
link out5s => in6s []
link out6s => in7s []
link out7s => in8s []
link out4s_2 => in11s []
link out11s_2 => in0s []
link out0s_2 => in10s []
link out10s_2 => in9s []
link out9s_2 => in8s []
spec
port=in2s -> (!(port=out8s) U ((port=in12s) & (TRUE U (port=out8s))))