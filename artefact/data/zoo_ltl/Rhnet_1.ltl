switch 2 (in2s,out2s,out2s_2) [] {
 rule in2s => out2s []
 }
 final {
 rule in2s => out2s_2 []
 }
switch 3 (in3s,out3s,out3s_2) [] {
 rule in3s => out3s []
 }
 final {
 rule in3s => out3s_2 []
 }
switch 1 (in1s,out1s,out1s_2) [] {
 rule in1s => out1s []
 }
 final {
 rule in1s => out1s_2 []
 }
switch 10 (in10s,out10s,out10s_2) [] {
 rule in10s => out10s []
 }
 final {
 rule in10s => out10s_2 []
 }
switch 11 (in11s,out11s) [] {
 rule in11s => out11s []
 }
 final {
     
 }
switch 12 (in12s,out12s) [] {
 rule in12s => out12s []
 }
 final {
     
 }
switch 13 (in13s,out13s) [] {
 rule in13s => out13s []
 }
 final {
     
 }
switch 14 (in14s,out14s) [] {
 rule in14s => out14s []
 }
 final {
     
 }
switch 15 (in15s,out15s,out15s_2) [] {
 rule in15s => out15s []
 }
 final {
 rule in15s => out15s_2 []
 }
switch 6 (in6s,out6s,out6s_2) [] {
 rule in6s => out6s []
 }
 final {
 rule in6s => out6s_2 []
 }
switch 9 (in9s,out9s_2) [] {

 }
 final {
 rule in9s => out9s_2 []
 }
switch 8 (in8s,out8s_2) [] {

 }
 final {
 rule in8s => out8s_2 []
 }
switch 7 (in7s,out7s) [] {
 rule in7s => out7s []
 }
 final {
 rule in7s => out7s []
 }
link  => in2s []
link out2s => in3s []
link out2s_2 => in3s []
link out3s => in1s []
link out3s_2 => in1s []
link out1s => in10s []
link out1s_2 => in10s []
link out10s => in11s []
link out10s_2 => in9s []
link out11s => in12s []
link out12s => in13s []
link out13s => in14s []
link out14s => in15s []
link out15s => in6s []
link out15s_2 => in6s []
link out6s => in7s []
link out6s_2 => in7s []
link out9s_2 => in8s []
link out8s_2 => in15s []
spec
port=in2s -> (!(port=out7s) U ((port=in1s) & (TRUE U (port=out7s))))