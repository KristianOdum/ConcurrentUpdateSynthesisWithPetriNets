switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 6 (in6s,out6s,out6s_2) [] {
 rule in6s => out6s []
 }
 final {
 rule in6s => out6s_2 []
 }
switch 1 (in1s,out1s,out1s_2) [] {
 rule in1s => out1s []
 }
 final {
 rule in1s => out1s_2 []
 }
switch 7 (in7s,out7s,out7s_2) [] {
 rule in7s => out7s []
 }
 final {
 rule in7s => out7s_2 []
 }
switch 13 (in13s,out13s,out13s_2) [] {
 rule in13s => out13s []
 }
 final {
 rule in13s => out13s_2 []
 }
switch 4 (in4s,out4s_2) [] {

 }
 final {
 rule in4s => out4s_2 []
 }
switch 2 (in2s,out2s_2) [] {

 }
 final {
 rule in2s => out2s_2 []
 }
switch 11 (in11s,out11s_2) [] {

 }
 final {
 rule in11s => out11s_2 []
 }
switch 9 (in9s,out9s_2) [] {

 }
 final {
 rule in9s => out9s_2 []
 }
switch 8 (in8s,out8s) [] {
 rule in8s => out8s []
 }
 final {
 rule in8s => out8s []
 }
link  => in0s []
link out0s => in6s []
link out0s_2 => in6s []
link out6s => in1s []
link out6s_2 => in4s []
link out1s => in7s []
link out1s_2 => in7s []
link out7s => in13s []
link out7s_2 => in13s []
link out13s => in8s []
link out13s_2 => in11s []
link out4s_2 => in2s []
link out2s_2 => in1s []
link out11s_2 => in9s []
link out9s_2 => in8s []
spec
port=in0s -> (!(port=out8s) U ((port=in1s) & (TRUE U (port=out8s))))