switch 12 (in12s,out12s,out12s_2) [] {
 rule in12s => out12s []
 }
 final {
 rule in12s => out12s_2 []
 }
switch 16 (in16s,out16s,out16s_2) [] {
 rule in16s => out16s []
 }
 final {
 rule in16s => out16s_2 []
 }
switch 2 (in2s,out2s,out2s_2) [] {
 rule in2s => out2s []
 }
 final {
 rule in2s => out2s_2 []
 }
switch 1 (in1s,out1s,out1s_2) [] {
 rule in1s => out1s []
 }
 final {
 rule in1s => out1s_2 []
 }
switch 6 (in6s,out6s,out6s_2) [] {
 rule in6s => out6s []
 }
 final {
 rule in6s => out6s_2 []
 }
switch 5 (in5s,out5s,out5s_2) [] {
 rule in5s => out5s []
 }
 final {
 rule in5s => out5s_2 []
 }
switch 3 (in3s,out3s_2) [] {

 }
 final {
 rule in3s => out3s_2 []
 }
switch 20 (in20s,out20s) [] {
 rule in20s => out20s []
 }
 final {
 rule in20s => out20s []
 }
link  => in12s []
link out12s => in16s []
link out12s_2 => in16s []
link out16s => in2s []
link out16s_2 => in2s []
link out2s => in1s []
link out2s_2 => in3s []
link out1s => in6s []
link out1s_2 => in6s []
link out6s => in5s []
link out6s_2 => in5s []
link out5s => in20s []
link out5s_2 => in20s []
link out3s_2 => in1s []
spec
port=in12s -> (!(port=out20s) U ((port=in1s) & (TRUE U (port=out20s))))