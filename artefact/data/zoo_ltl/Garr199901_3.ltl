switch 13 (in13s,out13s,out13s_2) [] {
 rule in13s => out13s []
 }
 final {
 rule in13s => out13s_2 []
 }
switch 4 (in4s,out4s,out4s_2) [] {
 rule in4s => out4s []
 }
 final {
 rule in4s => out4s_2 []
 }
switch 7 (in7s,out7s,out7s_2) [] {
 rule in7s => out7s []
 }
 final {
 rule in7s => out7s_2 []
 }
switch 3 (in3s,out3s,out3s_2) [] {
 rule in3s => out3s []
 }
 final {
 rule in3s => out3s_2 []
 }
switch 27 (in27s,out27s,out27s_2) [] {
 rule in27s => out27s []
 }
 final {
 rule in27s => out27s_2 []
 }
switch 18 (in18s,out18s,out18s_2) [] {
 rule in18s => out18s []
 }
 final {
 rule in18s => out18s_2 []
 }
switch 21 (in21s,out21s,out21s_2) [] {
 rule in21s => out21s []
 }
 final {
 rule in21s => out21s_2 []
 }
switch 17 (in17s,out17s,out17s_2) [] {
 rule in17s => out17s []
 }
 final {
 rule in17s => out17s_2 []
 }
switch 41 (in41s,out41s,out41s_2) [] {
 rule in41s => out41s []
 }
 final {
 rule in41s => out41s_2 []
 }
switch 32 (in32s,out32s,out32s_2) [] {
 rule in32s => out32s []
 }
 final {
 rule in32s => out32s_2 []
 }
switch 35 (in35s,out35s,out35s_2) [] {
 rule in35s => out35s []
 }
 final {
 rule in35s => out35s_2 []
 }
switch 31 (in31s,out31s,out31s_2) [] {
 rule in31s => out31s []
 }
 final {
 rule in31s => out31s_2 []
 }
switch 55 (in55s,out55s,out55s_2) [] {
 rule in55s => out55s []
 }
 final {
 rule in55s => out55s_2 []
 }
switch 46 (in46s,out46s,out46s_2) [] {
 rule in46s => out46s []
 }
 final {
 rule in46s => out46s_2 []
 }
switch 49 (in49s,out49s,out49s_2) [] {
 rule in49s => out49s []
 }
 final {
 rule in49s => out49s_2 []
 }
switch 1 (in1s,out1s_2) [] {

 }
 final {
 rule in1s => out1s_2 []
 }
switch 10 (in10s,out10s_2) [] {

 }
 final {
 rule in10s => out10s_2 []
 }
switch 15 (in15s,out15s_2) [] {

 }
 final {
 rule in15s => out15s_2 []
 }
switch 24 (in24s,out24s_2) [] {

 }
 final {
 rule in24s => out24s_2 []
 }
switch 29 (in29s,out29s_2) [] {

 }
 final {
 rule in29s => out29s_2 []
 }
switch 38 (in38s,out38s_2) [] {

 }
 final {
 rule in38s => out38s_2 []
 }
switch 43 (in43s,out43s_2) [] {

 }
 final {
 rule in43s => out43s_2 []
 }
switch 52 (in52s,out52s_2) [] {

 }
 final {
 rule in52s => out52s_2 []
 }
switch 45 (in45s,out45s) [] {
 rule in45s => out45s []
 }
 final {
 rule in45s => out45s []
 }
link  => in13s []
link out13s => in4s []
link out13s_2 => in4s []
link out4s => in7s []
link out4s_2 => in1s []
link out7s => in3s []
link out7s_2 => in3s []
link out3s => in27s []
link out3s_2 => in27s []
link out27s => in18s []
link out27s_2 => in18s []
link out18s => in21s []
link out18s_2 => in15s []
link out21s => in17s []
link out21s_2 => in17s []
link out17s => in41s []
link out17s_2 => in41s []
link out41s => in32s []
link out41s_2 => in32s []
link out32s => in35s []
link out32s_2 => in29s []
link out35s => in31s []
link out35s_2 => in31s []
link out31s => in55s []
link out31s_2 => in55s []
link out55s => in46s []
link out55s_2 => in46s []
link out46s => in49s []
link out46s_2 => in43s []
link out49s => in45s []
link out49s_2 => in45s []
link out1s_2 => in10s []
link out10s_2 => in7s []
link out15s_2 => in24s []
link out24s_2 => in21s []
link out29s_2 => in38s []
link out38s_2 => in35s []
link out43s_2 => in52s []
link out52s_2 => in49s []
spec
port=in13s -> (!(port=out45s) U ((port=in32s) & (TRUE U (port=out45s))))