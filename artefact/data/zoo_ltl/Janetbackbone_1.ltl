switch 20 (in20s,out20s,out20s_2) [] {
 rule in20s => out20s []
 }
 final {
 rule in20s => out20s_2 []
 }
switch 9 (in9s,out9s) [] {
 rule in9s => out9s []
 }
 final {
     
 }
switch 13 (in13s,out13s,out13s_2) [] {
 rule in13s => out13s []
 }
 final {
 rule in13s => out13s_2 []
 }
switch 12 (in12s,out12s) [] {
 rule in12s => out12s []
 }
 final {
     
 }
switch 17 (in17s,out17s) [] {
 rule in17s => out17s []
 }
 final {
     
 }
switch 14 (in14s,out14s_2) [] {

 }
 final {
 rule in14s => out14s_2 []
 }
switch 11 (in11s,out11s_2) [] {

 }
 final {
 rule in11s => out11s_2 []
 }
switch 18 (in18s,out18s_2) [] {

 }
 final {
 rule in18s => out18s_2 []
 }
switch 6 (in6s,out6s) [] {
 rule in6s => out6s []
 }
 final {
 rule in6s => out6s []
 }
link  => in20s []
link out20s => in9s []
link out20s_2 => in14s []
link out9s => in13s []
link out13s => in12s []
link out13s_2 => in11s []
link out12s => in17s []
link out17s => in6s []
link out14s_2 => in13s []
link out11s_2 => in18s []
link out18s_2 => in6s []
spec
port=in20s -> (!(port=out6s) U ((port=in13s) & (TRUE U (port=out6s))))