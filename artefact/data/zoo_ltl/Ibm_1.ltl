switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 3 (in3s,out3s) [] {
 rule in3s => out3s []
 }
 final {
     
 }
switch 2 (in2s,out2s) [] {
 rule in2s => out2s []
 }
 final {
     
 }
switch 9 (in9s,out9s) [] {
 rule in9s => out9s []
 }
 final {
     
 }
switch 17 (in17s,out17s,out17s_2) [] {
 rule in17s => out17s []
 }
 final {
 rule in17s => out17s_2 []
 }
switch 14 (in14s,out14s,out14s_2) [] {
 rule in14s => out14s []
 }
 final {
 rule in14s => out14s_2 []
 }
switch 7 (in7s,out7s_2) [] {

 }
 final {
 rule in7s => out7s_2 []
 }
switch 6 (in6s,out6s_2) [] {

 }
 final {
 rule in6s => out6s_2 []
 }
switch 1 (in1s,out1s_2) [] {

 }
 final {
 rule in1s => out1s_2 []
 }
switch 13 (in13s,out13s) [] {
 rule in13s => out13s []
 }
 final {
 rule in13s => out13s []
 }
link  => in0s []
link out0s => in3s []
link out0s_2 => in7s []
link out3s => in2s []
link out2s => in9s []
link out9s => in17s []
link out17s => in14s []
link out17s_2 => in14s []
link out14s => in13s []
link out14s_2 => in13s []
link out7s_2 => in6s []
link out6s_2 => in1s []
link out1s_2 => in17s []
spec
port=in0s -> (!(port=out13s) U ((port=in17s) & (TRUE U (port=out13s))))