switch 8 (in8s,out8s,out8s_2) [] {
 rule in8s => out8s []
 }
 final {
 rule in8s => out8s_2 []
 }
switch 5 (in5s,out5s,out5s_2) [] {
 rule in5s => out5s []
 }
 final {
 rule in5s => out5s_2 []
 }
switch 10 (in10s,out10s) [] {
 rule in10s => out10s []
 }
 final {
     
 }
switch 11 (in11s,out11s,out11s_2) [] {
 rule in11s => out11s []
 }
 final {
 rule in11s => out11s_2 []
 }
switch 15 (in15s,out15s,out15s_2) [] {
 rule in15s => out15s []
 }
 final {
 rule in15s => out15s_2 []
 }
switch 9 (in9s,out9s,out9s_2) [] {
 rule in9s => out9s []
 }
 final {
 rule in9s => out9s_2 []
 }
switch 7 (in7s,out7s,out7s_2) [] {
 rule in7s => out7s []
 }
 final {
 rule in7s => out7s_2 []
 }
switch 3 (in3s,out3s,out3s_2) [] {
 rule in3s => out3s []
 }
 final {
 rule in3s => out3s_2 []
 }
switch 13 (in13s,out13s_2) [] {

 }
 final {
 rule in13s => out13s_2 []
 }
switch 12 (in12s,out12s_2) [] {

 }
 final {
 rule in12s => out12s_2 []
 }
switch 17 (in17s,out17s_2) [] {

 }
 final {
 rule in17s => out17s_2 []
 }
switch 0 (in0s,out0s_2) [] {

 }
 final {
 rule in0s => out0s_2 []
 }
switch 2 (in2s,out2s) [] {
 rule in2s => out2s []
 }
 final {
 rule in2s => out2s []
 }
link  => in8s []
link out8s => in5s []
link out8s_2 => in5s []
link out5s => in10s []
link out5s_2 => in13s []
link out10s => in11s []
link out11s => in15s []
link out11s_2 => in15s []
link out15s => in9s []
link out15s_2 => in9s []
link out9s => in7s []
link out9s_2 => in17s []
link out7s => in3s []
link out7s_2 => in0s []
link out3s => in2s []
link out3s_2 => in2s []
link out13s_2 => in12s []
link out12s_2 => in11s []
link out17s_2 => in7s []
link out0s_2 => in3s []
spec
port=in8s -> (!(port=out2s) U ((port=in3s) & (TRUE U (port=out2s))))