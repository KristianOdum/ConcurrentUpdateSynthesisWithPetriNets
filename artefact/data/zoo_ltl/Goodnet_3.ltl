switch 6 (in6s,out6s,out6s_2) [] {
 rule in6s => out6s []
 }
 final {
 rule in6s => out6s_2 []
 }
switch 5 (in5s,out5s,out5s_2) [] {
 rule in5s => out5s []
 }
 final {
 rule in5s => out5s_2 []
 }
switch 15 (in15s,out15s) [] {
 rule in15s => out15s []
 }
 final {
     
 }
switch 9 (in9s,out9s,out9s_2) [] {
 rule in9s => out9s []
 }
 final {
 rule in9s => out9s_2 []
 }
switch 10 (in10s,out10s) [] {
 rule in10s => out10s []
 }
 final {
     
 }
switch 12 (in12s,out12s) [] {
 rule in12s => out12s []
 }
 final {
     
 }
switch 14 (in14s,out14s,out14s_2) [] {
 rule in14s => out14s []
 }
 final {
 rule in14s => out14s_2 []
 }
switch 13 (in13s,out13s,out13s_2) [] {
 rule in13s => out13s []
 }
 final {
 rule in13s => out13s_2 []
 }
switch 22 (in22s,out22s,out22s_2) [] {
 rule in22s => out22s []
 }
 final {
 rule in22s => out22s_2 []
 }
switch 21 (in21s,out21s,out21s_2) [] {
 rule in21s => out21s []
 }
 final {
 rule in21s => out21s_2 []
 }
switch 31 (in31s,out31s) [] {
 rule in31s => out31s []
 }
 final {
     
 }
switch 25 (in25s,out25s,out25s_2) [] {
 rule in25s => out25s []
 }
 final {
 rule in25s => out25s_2 []
 }
switch 26 (in26s,out26s) [] {
 rule in26s => out26s []
 }
 final {
     
 }
switch 28 (in28s,out28s) [] {
 rule in28s => out28s []
 }
 final {
     
 }
switch 30 (in30s,out30s,out30s_2) [] {
 rule in30s => out30s []
 }
 final {
 rule in30s => out30s_2 []
 }
switch 29 (in29s,out29s,out29s_2) [] {
 rule in29s => out29s []
 }
 final {
 rule in29s => out29s_2 []
 }
switch 38 (in38s,out38s,out38s_2) [] {
 rule in38s => out38s []
 }
 final {
 rule in38s => out38s_2 []
 }
switch 37 (in37s,out37s,out37s_2) [] {
 rule in37s => out37s []
 }
 final {
 rule in37s => out37s_2 []
 }
switch 47 (in47s,out47s) [] {
 rule in47s => out47s []
 }
 final {
     
 }
switch 41 (in41s,out41s,out41s_2) [] {
 rule in41s => out41s []
 }
 final {
 rule in41s => out41s_2 []
 }
switch 42 (in42s,out42s) [] {
 rule in42s => out42s []
 }
 final {
     
 }
switch 44 (in44s,out44s) [] {
 rule in44s => out44s []
 }
 final {
     
 }
switch 46 (in46s,out46s,out46s_2) [] {
 rule in46s => out46s []
 }
 final {
 rule in46s => out46s_2 []
 }
switch 45 (in45s,out45s,out45s_2) [] {
 rule in45s => out45s []
 }
 final {
 rule in45s => out45s_2 []
 }
switch 54 (in54s,out54s,out54s_2) [] {
 rule in54s => out54s []
 }
 final {
 rule in54s => out54s_2 []
 }
switch 53 (in53s,out53s,out53s_2) [] {
 rule in53s => out53s []
 }
 final {
 rule in53s => out53s_2 []
 }
switch 63 (in63s,out63s) [] {
 rule in63s => out63s []
 }
 final {
     
 }
switch 57 (in57s,out57s,out57s_2) [] {
 rule in57s => out57s []
 }
 final {
 rule in57s => out57s_2 []
 }
switch 58 (in58s,out58s) [] {
 rule in58s => out58s []
 }
 final {
     
 }
switch 60 (in60s,out60s) [] {
 rule in60s => out60s []
 }
 final {
     
 }
switch 62 (in62s,out62s,out62s_2) [] {
 rule in62s => out62s []
 }
 final {
 rule in62s => out62s_2 []
 }
switch 61 (in61s,out61s) [] {
 rule in61s => out61s []
 }
 final {
 rule in61s => out61s []
 }
link  => in6s []
link out6s => in5s []
link out6s_2 => in5s []
link out5s => in15s []
link out5s_2 => in9s []
link out15s => in9s []
link out9s => in10s []
link out9s_2 => in14s []
link out10s => in12s []
link out12s => in14s []
link out14s => in13s []
link out14s_2 => in13s []
link out13s => in22s []
link out13s_2 => in22s []
link out22s => in21s []
link out22s_2 => in21s []
link out21s => in31s []
link out21s_2 => in25s []
link out31s => in25s []
link out25s => in26s []
link out25s_2 => in30s []
link out26s => in28s []
link out28s => in30s []
link out30s => in29s []
link out30s_2 => in29s []
link out29s => in38s []
link out29s_2 => in38s []
link out38s => in37s []
link out38s_2 => in37s []
link out37s => in47s []
link out37s_2 => in41s []
link out47s => in41s []
link out41s => in42s []
link out41s_2 => in46s []
link out42s => in44s []
link out44s => in46s []
link out46s => in45s []
link out46s_2 => in45s []
link out45s => in54s []
link out45s_2 => in54s []
link out54s => in53s []
link out54s_2 => in53s []
link out53s => in63s []
link out53s_2 => in57s []
link out63s => in57s []
link out57s => in58s []
link out57s_2 => in62s []
link out58s => in60s []
link out60s => in62s []
link out62s => in61s []
link out62s_2 => in61s []
spec
port=in6s -> (!(port=out61s) U ((port=in37s) & (TRUE U (port=out61s))))