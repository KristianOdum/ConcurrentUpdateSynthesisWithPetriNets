switch 10 (in10s,out10s,out10s_2) [] {
 rule in10s => out10s []
 }
 final {
 rule in10s => out10s_2 []
 }
switch 11 (in11s,out11s,out11s_2) [] {
 rule in11s => out11s []
 }
 final {
 rule in11s => out11s_2 []
 }
switch 8 (in8s,out8s,out8s_2) [] {
 rule in8s => out8s []
 }
 final {
 rule in8s => out8s_2 []
 }
switch 2 (in2s,out2s,out2s_2) [] {
 rule in2s => out2s []
 }
 final {
 rule in2s => out2s_2 []
 }
switch 19 (in19s,out19s,out19s_2) [] {
 rule in19s => out19s []
 }
 final {
 rule in19s => out19s_2 []
 }
switch 30 (in30s,out30s,out30s_2) [] {
 rule in30s => out30s []
 }
 final {
 rule in30s => out30s_2 []
 }
switch 31 (in31s,out31s,out31s_2) [] {
 rule in31s => out31s []
 }
 final {
 rule in31s => out31s_2 []
 }
switch 28 (in28s,out28s,out28s_2) [] {
 rule in28s => out28s []
 }
 final {
 rule in28s => out28s_2 []
 }
switch 22 (in22s,out22s,out22s_2) [] {
 rule in22s => out22s []
 }
 final {
 rule in22s => out22s_2 []
 }
switch 39 (in39s,out39s,out39s_2) [] {
 rule in39s => out39s []
 }
 final {
 rule in39s => out39s_2 []
 }
switch 50 (in50s,out50s,out50s_2) [] {
 rule in50s => out50s []
 }
 final {
 rule in50s => out50s_2 []
 }
switch 51 (in51s,out51s,out51s_2) [] {
 rule in51s => out51s []
 }
 final {
 rule in51s => out51s_2 []
 }
switch 48 (in48s,out48s,out48s_2) [] {
 rule in48s => out48s []
 }
 final {
 rule in48s => out48s_2 []
 }
switch 42 (in42s,out42s,out42s_2) [] {
 rule in42s => out42s []
 }
 final {
 rule in42s => out42s_2 []
 }
switch 59 (in59s,out59s,out59s_2) [] {
 rule in59s => out59s []
 }
 final {
 rule in59s => out59s_2 []
 }
switch 70 (in70s,out70s,out70s_2) [] {
 rule in70s => out70s []
 }
 final {
 rule in70s => out70s_2 []
 }
switch 71 (in71s,out71s,out71s_2) [] {
 rule in71s => out71s []
 }
 final {
 rule in71s => out71s_2 []
 }
switch 68 (in68s,out68s,out68s_2) [] {
 rule in68s => out68s []
 }
 final {
 rule in68s => out68s_2 []
 }
switch 62 (in62s,out62s,out62s_2) [] {
 rule in62s => out62s []
 }
 final {
 rule in62s => out62s_2 []
 }
switch 15 (in15s,out15s_2) [] {

 }
 final {
 rule in15s => out15s_2 []
 }
switch 35 (in35s,out35s_2) [] {

 }
 final {
 rule in35s => out35s_2 []
 }
switch 55 (in55s,out55s_2) [] {

 }
 final {
 rule in55s => out55s_2 []
 }
switch 75 (in75s,out75s_2) [] {

 }
 final {
 rule in75s => out75s_2 []
 }
switch 79 (in79s,out79s) [] {
 rule in79s => out79s []
 }
 final {
 rule in79s => out79s []
 }
link  => in10s []
link out10s => in11s []
link out10s_2 => in11s []
link out11s => in8s []
link out11s_2 => in15s []
link out8s => in2s []
link out8s_2 => in2s []
link out2s => in19s []
link out2s_2 => in19s []
link out19s => in30s []
link out19s_2 => in30s []
link out30s => in31s []
link out30s_2 => in31s []
link out31s => in28s []
link out31s_2 => in35s []
link out28s => in22s []
link out28s_2 => in22s []
link out22s => in39s []
link out22s_2 => in39s []
link out39s => in50s []
link out39s_2 => in50s []
link out50s => in51s []
link out50s_2 => in51s []
link out51s => in48s []
link out51s_2 => in55s []
link out48s => in42s []
link out48s_2 => in42s []
link out42s => in59s []
link out42s_2 => in59s []
link out59s => in70s []
link out59s_2 => in70s []
link out70s => in71s []
link out70s_2 => in71s []
link out71s => in68s []
link out71s_2 => in75s []
link out68s => in62s []
link out68s_2 => in62s []
link out62s => in79s []
link out62s_2 => in79s []
link out15s_2 => in8s []
link out35s_2 => in28s []
link out55s_2 => in48s []
link out75s_2 => in68s []
spec
port=in10s -> (!(port=out79s) U ((port=in2s) & (TRUE U (port=out79s))))