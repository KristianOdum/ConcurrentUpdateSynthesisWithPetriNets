switch 6 (in6s,out6s,out6s_2) [] {
 rule in6s => out6s []
 }
 final {
 rule in6s => out6s_2 []
 }
switch 10 (in10s,out10s,out10s_2) [] {
 rule in10s => out10s []
 }
 final {
 rule in10s => out10s_2 []
 }
switch 11 (in11s,out11s) [] {
 rule in11s => out11s []
 }
 final {
     
 }
switch 5 (in5s,out5s,out5s_2) [] {
 rule in5s => out5s []
 }
 final {
 rule in5s => out5s_2 []
 }
switch 2 (in2s,out2s,out2s_2) [] {
 rule in2s => out2s []
 }
 final {
 rule in2s => out2s_2 []
 }
switch 9 (in9s,out9s_2) [] {

 }
 final {
 rule in9s => out9s_2 []
 }
switch 12 (in12s,out12s_2) [] {

 }
 final {
 rule in12s => out12s_2 []
 }
switch 1 (in1s,out1s) [] {
 rule in1s => out1s []
 }
 final {
 rule in1s => out1s []
 }
link  => in6s []
link out6s => in10s []
link out6s_2 => in10s []
link out10s => in11s []
link out10s_2 => in9s []
link out11s => in5s []
link out5s => in2s []
link out5s_2 => in2s []
link out2s => in1s []
link out2s_2 => in1s []
link out9s_2 => in12s []
link out12s_2 => in5s []
spec
port=in6s -> (!(port=out1s) U ((port=in2s) & (TRUE U (port=out1s))))