switch 11 (in11s,out11s,out11s_2) [] {
 rule in11s => out11s []
 }
 final {
 rule in11s => out11s_2 []
 }
switch 8 (in8s,out8s,out8s_2) [] {
 rule in8s => out8s []
 }
 final {
 rule in8s => out8s_2 []
 }
switch 6 (in6s,out6s,out6s_2) [] {
 rule in6s => out6s []
 }
 final {
 rule in6s => out6s_2 []
 }
switch 22 (in22s,out22s,out22s_2) [] {
 rule in22s => out22s []
 }
 final {
 rule in22s => out22s_2 []
 }
switch 20 (in20s,out20s,out20s_2) [] {
 rule in20s => out20s []
 }
 final {
 rule in20s => out20s_2 []
 }
switch 21 (in21s,out21s_2) [] {

 }
 final {
 rule in21s => out21s_2 []
 }
switch 2 (in2s,out2s) [] {
 rule in2s => out2s []
 }
 final {
 rule in2s => out2s []
 }
link  => in11s []
link out11s => in8s []
link out11s_2 => in8s []
link out8s => in6s []
link out8s_2 => in6s []
link out6s => in22s []
link out6s_2 => in22s []
link out22s => in20s []
link out22s_2 => in21s []
link out20s => in2s []
link out20s_2 => in2s []
link out21s_2 => in20s []
spec
port=in11s -> (!(port=out2s) U ((port=in8s) & (TRUE U (port=out2s))))