switch 6 (in6s,out6s,out6s_2) [] {
 rule in6s => out6s []
 }
 final {
 rule in6s => out6s_2 []
 }
switch 13 (in13s,out13s) [] {
 rule in13s => out13s []
 }
 final {
     
 }
switch 12 (in12s,out12s,out12s_2) [] {
 rule in12s => out12s []
 }
 final {
 rule in12s => out12s_2 []
 }
switch 2 (in2s,out2s) [] {
 rule in2s => out2s []
 }
 final {
     
 }
switch 7 (in7s,out7s_2) [] {

 }
 final {
 rule in7s => out7s_2 []
 }
switch 9 (in9s,out9s_2) [] {

 }
 final {
 rule in9s => out9s_2 []
 }
switch 10 (in10s,out10s_2) [] {

 }
 final {
 rule in10s => out10s_2 []
 }
switch 11 (in11s,out11s) [] {
 rule in11s => out11s []
 }
 final {
 rule in11s => out11s []
 }
link  => in6s []
link out6s => in13s []
link out6s_2 => in7s []
link out13s => in12s []
link out12s => in2s []
link out12s_2 => in9s []
link out2s => in11s []
link out7s_2 => in12s []
link out9s_2 => in10s []
link out10s_2 => in11s []
spec
port=in6s -> (!(port=out11s) U ((port=in12s) & (TRUE U (port=out11s))))