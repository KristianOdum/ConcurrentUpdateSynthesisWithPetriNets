switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 10 (in10s,out10s,out10s_2) [] {
 rule in10s => out10s []
 }
 final {
 rule in10s => out10s_2 []
 }
switch 8 (in8s,out8s) [] {
 rule in8s => out8s []
 }
 final {
     
 }
switch 9 (in9s,out9s) [] {
 rule in9s => out9s []
 }
 final {
     
 }
switch 11 (in11s,out11s) [] {
 rule in11s => out11s []
 }
 final {
     
 }
switch 4 (in4s,out4s,out4s_2) [] {
 rule in4s => out4s []
 }
 final {
 rule in4s => out4s_2 []
 }
switch 1 (in1s,out1s) [] {
 rule in1s => out1s []
 }
 final {
     
 }
switch 7 (in7s,out7s_2) [] {

 }
 final {
 rule in7s => out7s_2 []
 }
switch 6 (in6s,out6s_2) [] {

 }
 final {
 rule in6s => out6s_2 []
 }
switch 3 (in3s,out3s_2) [] {

 }
 final {
 rule in3s => out3s_2 []
 }
switch 2 (in2s,out2s) [] {
 rule in2s => out2s []
 }
 final {
 rule in2s => out2s []
 }
link  => in0s []
link out0s => in10s []
link out0s_2 => in10s []
link out10s => in8s []
link out10s_2 => in7s []
link out8s => in9s []
link out9s => in11s []
link out11s => in4s []
link out4s => in1s []
link out4s_2 => in3s []
link out1s => in2s []
link out7s_2 => in6s []
link out6s_2 => in4s []
link out3s_2 => in2s []
spec
port=in0s -> (!(port=out2s) U ((port=in10s) & (TRUE U (port=out2s))))