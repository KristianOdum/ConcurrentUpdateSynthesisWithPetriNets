switch 12 (in12s,out12s,out12s_2) [] {
 rule in12s => out12s []
 }
 final {
 rule in12s => out12s_2 []
 }
switch 13 (in13s,out13s) [] {
 rule in13s => out13s []
 }
 final {
     
 }
switch 14 (in14s,out14s) [] {
 rule in14s => out14s []
 }
 final {
     
 }
switch 15 (in15s,out15s,out15s_2) [] {
 rule in15s => out15s []
 }
 final {
 rule in15s => out15s_2 []
 }
switch 2 (in2s,out2s,out2s_2) [] {
 rule in2s => out2s []
 }
 final {
 rule in2s => out2s_2 []
 }
switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 6 (in6s,out6s,out6s_2) [] {
 rule in6s => out6s []
 }
 final {
 rule in6s => out6s_2 []
 }
switch 11 (in11s,out11s_2) [] {

 }
 final {
 rule in11s => out11s_2 []
 }
switch 7 (in7s,out7s) [] {
 rule in7s => out7s []
 }
 final {
 rule in7s => out7s []
 }
link  => in12s []
link out12s => in13s []
link out12s_2 => in11s []
link out13s => in14s []
link out14s => in15s []
link out15s => in2s []
link out15s_2 => in2s []
link out2s => in0s []
link out2s_2 => in0s []
link out0s => in6s []
link out0s_2 => in6s []
link out6s => in7s []
link out6s_2 => in7s []
link out11s_2 => in15s []
spec
port=in12s -> (!(port=out7s) U ((port=in0s) & (TRUE U (port=out7s))))