switch 16 (in16s,out16s,out16s_2) [] {
 rule in16s => out16s []
 }
 final {
 rule in16s => out16s_2 []
 }
switch 17 (in17s,out17s,out17s_2) [] {
 rule in17s => out17s []
 }
 final {
 rule in17s => out17s_2 []
 }
switch 8 (in8s,out8s) [] {
 rule in8s => out8s []
 }
 final {
     
 }
switch 9 (in9s,out9s,out9s_2) [] {
 rule in9s => out9s []
 }
 final {
 rule in9s => out9s_2 []
 }
switch 11 (in11s,out11s,out11s_2) [] {
 rule in11s => out11s []
 }
 final {
 rule in11s => out11s_2 []
 }
switch 10 (in10s,out10s,out10s_2) [] {
 rule in10s => out10s []
 }
 final {
 rule in10s => out10s_2 []
 }
switch 14 (in14s,out14s_2) [] {

 }
 final {
 rule in14s => out14s_2 []
 }
switch 12 (in12s,out12s) [] {
 rule in12s => out12s []
 }
 final {
 rule in12s => out12s []
 }
link  => in16s []
link out16s => in17s []
link out16s_2 => in17s []
link out17s => in8s []
link out17s_2 => in14s []
link out8s => in9s []
link out9s => in11s []
link out9s_2 => in11s []
link out11s => in10s []
link out11s_2 => in10s []
link out10s => in12s []
link out10s_2 => in12s []
link out14s_2 => in9s []
spec
port=in16s -> (!(port=out12s) U ((port=in9s) & (TRUE U (port=out12s))))