switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 3 (in3s,out3s,out3s_2) [] {
 rule in3s => out3s []
 }
 final {
 rule in3s => out3s_2 []
 }
switch 16 (in16s,out16s,out16s_2) [] {
 rule in16s => out16s []
 }
 final {
 rule in16s => out16s_2 []
 }
switch 8 (in8s,out8s) [] {
 rule in8s => out8s []
 }
 final {
     
 }
switch 14 (in14s,out14s,out14s_2) [] {
 rule in14s => out14s []
 }
 final {
 rule in14s => out14s_2 []
 }
switch 11 (in11s,out11s,out11s_2) [] {
 rule in11s => out11s []
 }
 final {
 rule in11s => out11s_2 []
 }
switch 17 (in17s,out17s,out17s_2) [] {
 rule in17s => out17s []
 }
 final {
 rule in17s => out17s_2 []
 }
switch 20 (in20s,out20s,out20s_2) [] {
 rule in20s => out20s []
 }
 final {
 rule in20s => out20s_2 []
 }
switch 33 (in33s,out33s,out33s_2) [] {
 rule in33s => out33s []
 }
 final {
 rule in33s => out33s_2 []
 }
switch 25 (in25s,out25s) [] {
 rule in25s => out25s []
 }
 final {
     
 }
switch 31 (in31s,out31s,out31s_2) [] {
 rule in31s => out31s []
 }
 final {
 rule in31s => out31s_2 []
 }
switch 28 (in28s,out28s) [] {
 rule in28s => out28s []
 }
 final {
 rule in28s => out28s []
 }
link  => in0s []
link out0s => in3s []
link out0s_2 => in3s []
link out3s => in16s []
link out3s_2 => in16s []
link out16s => in8s []
link out16s_2 => in14s []
link out8s => in14s []
link out14s => in11s []
link out14s_2 => in11s []
link out11s => in17s []
link out11s_2 => in17s []
link out17s => in20s []
link out17s_2 => in20s []
link out20s => in33s []
link out20s_2 => in33s []
link out33s => in25s []
link out33s_2 => in31s []
link out25s => in31s []
link out31s => in28s []
link out31s_2 => in28s []
spec
port=in0s -> (!(port=out28s) U ((port=in33s) & (TRUE U (port=out28s))))