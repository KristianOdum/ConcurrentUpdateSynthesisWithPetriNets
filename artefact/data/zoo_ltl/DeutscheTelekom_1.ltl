switch 13 (in13s,out13s,out13s_2) [] {
 rule in13s => out13s []
 }
 final {
 rule in13s => out13s_2 []
 }
switch 12 (in12s,out12s,out12s_2) [] {
 rule in12s => out12s []
 }
 final {
 rule in12s => out12s_2 []
 }
switch 20 (in20s,out20s,out20s_2) [] {
 rule in20s => out20s []
 }
 final {
 rule in20s => out20s_2 []
 }
switch 28 (in28s,out28s,out28s_2) [] {
 rule in28s => out28s []
 }
 final {
 rule in28s => out28s_2 []
 }
switch 24 (in24s,out24s,out24s_2) [] {
 rule in24s => out24s []
 }
 final {
 rule in24s => out24s_2 []
 }
switch 26 (in26s,out26s,out26s_2) [] {
 rule in26s => out26s []
 }
 final {
 rule in26s => out26s_2 []
 }
switch 32 (in32s,out32s) [] {
 rule in32s => out32s []
 }
 final {
     
 }
switch 25 (in25s,out25s_2) [] {

 }
 final {
 rule in25s => out25s_2 []
 }
switch 9 (in9s,out9s_2) [] {

 }
 final {
 rule in9s => out9s_2 []
 }
switch 31 (in31s,out31s) [] {
 rule in31s => out31s []
 }
 final {
 rule in31s => out31s []
 }
link  => in13s []
link out13s => in12s []
link out13s_2 => in12s []
link out12s => in20s []
link out12s_2 => in20s []
link out20s => in28s []
link out20s_2 => in28s []
link out28s => in24s []
link out28s_2 => in25s []
link out24s => in26s []
link out24s_2 => in26s []
link out26s => in32s []
link out26s_2 => in31s []
link out32s => in31s []
link out25s_2 => in9s []
link out9s_2 => in24s []
spec
port=in13s -> (!(port=out31s) U ((port=in12s) & (TRUE U (port=out31s))))