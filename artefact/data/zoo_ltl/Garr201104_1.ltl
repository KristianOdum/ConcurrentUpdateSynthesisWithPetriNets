switch 0 (in0s,out0s,out0s_2) [] {
 rule in0s => out0s []
 }
 final {
 rule in0s => out0s_2 []
 }
switch 33 (in33s,out33s,out33s_2) [] {
 rule in33s => out33s []
 }
 final {
 rule in33s => out33s_2 []
 }
switch 14 (in14s,out14s) [] {
 rule in14s => out14s []
 }
 final {
     
 }
switch 53 (in53s,out53s,out53s_2) [] {
 rule in53s => out53s []
 }
 final {
 rule in53s => out53s_2 []
 }
switch 18 (in18s,out18s) [] {
 rule in18s => out18s []
 }
 final {
     
 }
switch 21 (in21s,out21s,out21s_2) [] {
 rule in21s => out21s []
 }
 final {
 rule in21s => out21s_2 []
 }
switch 20 (in20s,out20s,out20s_2) [] {
 rule in20s => out20s []
 }
 final {
 rule in20s => out20s_2 []
 }
switch 35 (in35s,out35s_2) [] {

 }
 final {
 rule in35s => out35s_2 []
 }
switch 10 (in10s,out10s_2) [] {

 }
 final {
 rule in10s => out10s_2 []
 }
switch 12 (in12s,out12s) [] {
 rule in12s => out12s []
 }
 final {
 rule in12s => out12s []
 }
link  => in0s []
link out0s => in33s []
link out0s_2 => in33s []
link out33s => in14s []
link out33s_2 => in35s []
link out14s => in53s []
link out53s => in18s []
link out53s_2 => in10s []
link out18s => in21s []
link out21s => in20s []
link out21s_2 => in20s []
link out20s => in12s []
link out20s_2 => in12s []
link out35s_2 => in53s []
link out10s_2 => in21s []
spec
port=in0s -> (!(port=out12s) U ((port=in33s) & (TRUE U (port=out12s))))