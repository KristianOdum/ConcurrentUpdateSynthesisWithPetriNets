switch 10 (in10s,out10s,out10s_2) [] {
 rule in10s => out10s []
 }
 final {
 rule in10s => out10s_2 []
 }
switch 18 (in18s,out18s,out18s_2) [] {
 rule in18s => out18s []
 }
 final {
 rule in18s => out18s_2 []
 }
switch 19 (in19s,out19s,out19s_2) [] {
 rule in19s => out19s []
 }
 final {
 rule in19s => out19s_2 []
 }
switch 8 (in8s,out8s,out8s_2) [] {
 rule in8s => out8s []
 }
 final {
 rule in8s => out8s_2 []
 }
switch 48 (in48s,out48s,out48s_2) [] {
 rule in48s => out48s []
 }
 final {
 rule in48s => out48s_2 []
 }
switch 12 (in12s,out12s) [] {
 rule in12s => out12s []
 }
 final {
     
 }
switch 28 (in28s,out28s,out28s_2) [] {
 rule in28s => out28s []
 }
 final {
 rule in28s => out28s_2 []
 }
switch 30 (in30s,out30s,out30s_2) [] {
 rule in30s => out30s []
 }
 final {
 rule in30s => out30s_2 []
 }
switch 13 (in13s,out13s,out13s_2) [] {
 rule in13s => out13s []
 }
 final {
 rule in13s => out13s_2 []
 }
switch 51 (in51s,out51s) [] {
 rule in51s => out51s []
 }
 final {
 rule in51s => out51s []
 }
link  => in10s []
link out10s => in18s []
link out10s_2 => in18s []
link out18s => in19s []
link out18s_2 => in19s []
link out19s => in8s []
link out19s_2 => in8s []
link out8s => in48s []
link out8s_2 => in48s []
link out48s => in12s []
link out48s_2 => in30s []
link out12s => in28s []
link out28s => in30s []
link out28s_2 => in13s []
link out30s => in13s []
link out30s_2 => in28s []
link out13s => in51s []
link out13s_2 => in51s []
spec
port=in10s -> (!(port=out51s) U ((port=in8s) & (TRUE U (port=out51s))))