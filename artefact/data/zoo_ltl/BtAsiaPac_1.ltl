switch 19 (in19s,out19s,out19s_2) [] {
 rule in19s => out19s []
 }
 final {
 rule in19s => out19s_2 []
 }
switch 2 (in2s,out2s,out2s_2) [] {
 rule in2s => out2s []
 }
 final {
 rule in2s => out2s_2 []
 }
switch 6 (in6s,out6s,out6s_2) [] {
 rule in6s => out6s []
 }
 final {
 rule in6s => out6s_2 []
 }
switch 4 (in4s,out4s,out4s_2) [] {
 rule in4s => out4s []
 }
 final {
 rule in4s => out4s_2 []
 }
switch 15 (in15s,out15s,out15s_2) [] {
 rule in15s => out15s []
 }
 final {
 rule in15s => out15s_2 []
 }
switch 5 (in5s,out5s_2) [] {

 }
 final {
 rule in5s => out5s_2 []
 }
switch 13 (in13s,out13s_2) [] {

 }
 final {
 rule in13s => out13s_2 []
 }
switch 9 (in9s,out9s) [] {
 rule in9s => out9s []
 }
 final {
 rule in9s => out9s []
 }
link  => in19s []
link out19s => in2s []
link out19s_2 => in2s []
link out2s => in6s []
link out2s_2 => in6s []
link out6s => in4s []
link out6s_2 => in5s []
link out4s => in15s []
link out4s_2 => in15s []
link out15s => in9s []
link out15s_2 => in9s []
link out5s_2 => in13s []
link out13s_2 => in4s []
spec
port=in19s -> (!(port=out9s) U ((port=in2s) & (TRUE U (port=out9s))))