[flattening model]
[performing NNF]
>>> set max_rules = 1, num bits = 1, mask = 1
[generating graph: 0]
[[start graph timer]]
[[end graph timer]]
[[start synthesis timer: 1612375868.580978]]
[using checkers: mc = ]
[start initial model checking]
[finish initial model checking]
[Answer: different order]
[[stop synthesis timer: 1612375869.070807]]
[finished synthesizing update (0.501934 s)]
[------------------]
(346:-1), #, (348:-1), #, (349:-1), #, (352:-1), #, (353:-1), #, (354:-1), #, (357:-1), #, (363:-1), #, (372:-1), #, (377:-1), #, (378:-1), #, (383:-1), #, (332:-1), #, (343:-1), #, (345:-1), #, (379:-1), #, (384:-1), #, (405:-1), #, (406:-1), #, (413:-1), #, (416:-1), #, (417:-1), #, (356:-1), #, (359:-1), #, (361:-1), #, (368:-1), #, (385:-1), #, (386:-1), #, (392:-1), #, (393:-1), #, (764:-1), #, (766:-1), #, (767:-1), #, (770:-1), #, (771:-1), #, (772:-1), #, (775:-1), #, (781:-1), #, (790:-1), #, (795:-1), #, (796:-1), #, (801:-1), #, (750:-1), #, (761:-1), #, (763:-1), #, (797:-1), #, (802:-1), #, (823:-1), #, (824:-1), #, (831:-1), #, (834:-1), #, (835:-1), #, (774:-1), #, (777:-1), #, (779:-1), #, (786:-1), #, (803:-1), #, (804:-1), #, (810:-1), #, (811:-1), #, (1182:-1), #, (1184:-1), #, (1185:-1), #, (1188:-1), #, (1189:-1), #, (1190:-1), #, (1193:-1), #, (1199:-1), #, (1208:-1), #, (1213:-1), #, (1214:-1), #, (1219:-1), #, (1168:-1), #, (1179:-1), #, (1181:-1), #, (1215:-1), #, (1220:-1), #, (1241:-1), #, (1242:-1), #, (1249:-1), #, (1252:-1), #, (1253:-1), #, (1192:-1), #, (1195:-1), #, (1197:-1), #, (1204:-1), #, (1221:-1), #, (1222:-1), #, (1228:-1), #, (1229:-1), #, (1600:-1), #, (1602:-1), #, (1603:-1), #, (1606:-1), #, (1607:-1), #, (1608:-1), #, (1611:-1), #, (1617:-1), #, (1626:-1), #, (1631:-1), #, (1632:-1), #, (1637:-1), #, (1586:-1), #, (1597:-1), #, (1599:-1), #, (1633:-1), #, (1638:-1), #, (1659:-1), #, (1660:-1), #, (1667:-1), #, (1670:-1), #, (1671:-1), #, (1610:-1), #, (1613:-1), #, (1615:-1), #, (1622:-1), #, (1639:-1), #, (1640:-1), #, (1646:-1), #, (1647:-1), #, (2018:-1), #, (2020:-1), #, (2021:-1), #, (2024:-1), #, (2025:-1), #, (2026:-1), #, (2029:-1), #, (2035:-1), #, (2044:-1), #, (2049:-1), #, (2050:-1), #, (2055:-1), #, (2004:-1), #, (2015:-1), #, (2017:-1), #, (2051:-1), #, (2056:-1), #, (2077:-1), #, (2078:-1), #, (2085:-1), #, (2088:-1), #, (2089:-1), #, (2028:-1), #, (2031:-1), #, (2033:-1), #, (2040:-1), #, (2057:-1), #, (2058:-1), #, (2064:-1), #, (2065:-1), #, (2436:-1), #, (2438:-1), #, (2439:-1), #, (2442:-1), #, (2443:-1), #, (2444:-1), #, (2447:-1), #, (2453:-1), #, (2462:-1), #, (2467:-1), #, (2468:-1), #, (2473:-1), #, (2422:-1), #, (2433:-1), #, (2435:-1), #, (2469:-1), #, (2474:-1), #, (2495:-1), #, (2496:-1), #, (2503:-1), #, (2506:-1), #, (2507:-1), #, (2446:-1), #, (2449:-1), #, (2451:-1), #, (2458:-1), #, (2475:-1), #, (2476:-1), #, (2482:-1), #, (2483:-1), #, (2854:-1), #, (2856:-1), #, (2857:-1), #, (2860:-1), #, (2861:-1), #, (2862:-1), #, (2865:-1), #, (2871:-1), #, (2880:-1), #, (2885:-1), #, (2886:-1), #, (2891:-1), #, (2840:-1), #, (2851:-1), #, (2853:-1), #, (2887:-1), #, (2892:-1), #, (2913:-1), #, (2914:-1), #, (2921:-1), #, (2924:-1), #, (2925:-1), #, (2864:-1), #, (2867:-1), #, (2869:-1), #, (2876:-1), #, (2893:-1), #, (2894:-1), #, (2900:-1), #, (2901:-1), #, (3272:-1), #, (3274:-1), #, (3275:-1), #, (3278:-1), #, (3279:-1), #, (3280:-1), #, (3283:-1), #, (3289:-1), #, (3298:-1), #, (3304:-1), #, (3309:-1), #, (3258:-1), #, (3269:-1), #, (3271:-1), #, (3305:-1), #, (3310:-1), #, (3331:-1), #, (3332:-1), #, (3339:-1), #, (3342:-1), #, (3343:-1), #, (3282:-1), #, (3285:-1), #, (3287:-1), #, (3294:-1), #, (3311:-1), #, (3312:-1), #, (3318:-1), #, (3319:-1), #, (3303:-1)
num_wait = 239
num_chgs = 831
chg_time = 0.097070
chk_time = 0.321784
inc_time = 0.146118
dfs_time = 0.035411
mod_time = 0.004788
ntp_time = 0.000000
cex_count = 0
@@@M68880@@@
@@@T853@@@
