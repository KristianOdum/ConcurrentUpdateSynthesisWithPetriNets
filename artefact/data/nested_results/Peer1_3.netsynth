[flattening model]
[performing NNF]
>>> set max_rules = 1, num bits = 1, mask = 1
[generating graph: 0]
[[start graph timer]]
[[end graph timer]]
[[start synthesis timer: 1612375868.744771]]
[using checkers: mc = ]
[start initial model checking]
[finish initial model checking]
[Answer: different order]
[[stop synthesis timer: 1612375872.861830]]
[finished synthesizing update (4.154761 s)]
[------------------]
(1021:-1), #, (1037:-1), #, (1038:-1), #, (1039:-1), #, (1040:-1), #, (1045:-1), #, (1052:-1), #, (1055:-1), #, (1067:-1), #, (1107:-1), #, (1108:-1), #, (1110:-1), #, (1115:-1), #, (1129:-1), #, (1131:-1), #, (1132:-1), #, (1243:-1), #, (1245:-1), #, (1281:-1), #, (1282:-1), #, (1312:-1), #, (1317:-1), #, (1319:-1), #, (1324:-1), #, (1338:-1), #, (1348:-1), #, (1411:-1), #, (1414:-1), #, (1459:-1), #, (1461:-1), #, (1467:-1), #, (1470:-1), #, (1482:-1), #, (1487:-1), #, (1490:-1), #, (1493:-1), #, (1027:-1), #, (1213:-1), #, (1253:-1), #, (1256:-1), #, (1299:-1), #, (1375:-1), #, (1508:-1), #, (1509:-1), #, (1511:-1), #, (1512:-1), #, (1515:-1), #, (1542:-1), #, (1548:-1), #, (1589:-1), #, (1598:-1), #, (1616:-1), #, (1617:-1), #, (1204:-1), #, (1072:-1), #, (1099:-1), #, (1100:-1), #, (1101:-1), #, (1342:-1), #, (1627:-1), #, (1109:-1), #, (1033:-1), #, (1034:-1), #, (1035:-1), #, (1036:-1), #, (1103:-1), #, (1106:-1), #, (1111:-1), #, (1112:-1), #, (1207:-1), #, (1208:-1), #, (1501:-1), #, (1528:-1), #, (1628:-1), #, (1631:-1), #, (1641:-1), #, (1671:-1), #, (1694:-1), #, (1695:-1), #, (1696:-1), #, (1698:-1), #, (1700:-1), #, (1597:-1), #, (1076:-1), #, (1077:-1), #, (1078:-1), #, (1127:-1), #, (1128:-1), #, (1333:-1), #, (1335:-1), #, (1336:-1), #, (1352:-1), #, (1551:-1), #, (1562:-1), #, (1564:-1), #, (1672:-1), #, (1673:-1), #, (1692:-1), #, (1697:-1), #, (1705:-1), #, (1706:-1), #, (1707:-1), #, (1728:-1), #, (1737:-1), #, (1743:-1), #, (1744:-1), #, (1745:-1), #, (2767:-1), #, (2783:-1), #, (2784:-1), #, (2785:-1), #, (2786:-1), #, (2791:-1), #, (2798:-1), #, (2801:-1), #, (2813:-1), #, (2853:-1), #, (2854:-1), #, (2856:-1), #, (2861:-1), #, (2875:-1), #, (2877:-1), #, (2878:-1), #, (2989:-1), #, (2991:-1), #, (3027:-1), #, (3028:-1), #, (3058:-1), #, (3063:-1), #, (3065:-1), #, (3070:-1), #, (3084:-1), #, (3094:-1), #, (3157:-1), #, (3160:-1), #, (3205:-1), #, (3207:-1), #, (3213:-1), #, (3216:-1), #, (3228:-1), #, (3233:-1), #, (3236:-1), #, (3239:-1), #, (2773:-1), #, (2959:-1), #, (2999:-1), #, (3002:-1), #, (3045:-1), #, (3121:-1), #, (3254:-1), #, (3255:-1), #, (3257:-1), #, (3258:-1), #, (3261:-1), #, (3288:-1), #, (3294:-1), #, (3335:-1), #, (3344:-1), #, (3362:-1), #, (3363:-1), #, (2950:-1), #, (2818:-1), #, (2845:-1), #, (2846:-1), #, (2847:-1), #, (3088:-1), #, (3373:-1), #, (2855:-1), #, (2779:-1), #, (2780:-1), #, (2781:-1), #, (2782:-1), #, (2849:-1), #, (2852:-1), #, (2857:-1), #, (2858:-1), #, (2953:-1), #, (2954:-1), #, (3247:-1), #, (3274:-1), #, (3374:-1), #, (3377:-1), #, (3387:-1), #, (3417:-1), #, (3440:-1), #, (3441:-1), #, (3442:-1), #, (3444:-1), #, (3446:-1), #, (3343:-1), #, (2822:-1), #, (2823:-1), #, (2824:-1), #, (2873:-1), #, (2874:-1), #, (3079:-1), #, (3081:-1), #, (3082:-1), #, (3098:-1), #, (3297:-1), #, (3308:-1), #, (3310:-1), #, (3418:-1), #, (3419:-1), #, (3438:-1), #, (3443:-1), #, (3451:-1), #, (3452:-1), #, (3453:-1), #, (3474:-1), #, (3483:-1), #, (3489:-1), #, (3490:-1), #, (3491:-1), #, (4513:-1), #, (4529:-1), #, (4530:-1), #, (4531:-1), #, (4532:-1), #, (4537:-1), #, (4544:-1), #, (4547:-1), #, (4559:-1), #, (4599:-1), #, (4600:-1), #, (4602:-1), #, (4607:-1), #, (4621:-1), #, (4623:-1), #, (4624:-1), #, (4735:-1), #, (4737:-1), #, (4773:-1), #, (4774:-1), #, (4804:-1), #, (4809:-1), #, (4811:-1), #, (4816:-1), #, (4830:-1), #, (4840:-1), #, (4903:-1), #, (4906:-1), #, (4951:-1), #, (4953:-1), #, (4959:-1), #, (4962:-1), #, (4974:-1), #, (4979:-1), #, (4982:-1), #, (4985:-1), #, (4519:-1), #, (4705:-1), #, (4745:-1), #, (4748:-1), #, (4791:-1), #, (4867:-1), #, (5000:-1), #, (5001:-1), #, (5003:-1), #, (5004:-1), #, (5007:-1), #, (5034:-1), #, (5040:-1), #, (5081:-1), #, (5090:-1), #, (5108:-1), #, (5109:-1), #, (4696:-1), #, (4564:-1), #, (4591:-1), #, (4592:-1), #, (4593:-1), #, (4834:-1), #, (5119:-1), #, (4601:-1), #, (4525:-1), #, (4526:-1), #, (4527:-1), #, (4528:-1), #, (4595:-1), #, (4598:-1), #, (4603:-1), #, (4604:-1), #, (4699:-1), #, (4700:-1), #, (4993:-1), #, (5020:-1), #, (5120:-1), #, (5123:-1), #, (5133:-1), #, (5163:-1), #, (5186:-1), #, (5187:-1), #, (5188:-1), #, (5190:-1), #, (5192:-1), #, (5089:-1), #, (4568:-1), #, (4569:-1), #, (4570:-1), #, (4619:-1), #, (4620:-1), #, (4825:-1), #, (4827:-1), #, (4828:-1), #, (4844:-1), #, (5043:-1), #, (5054:-1), #, (5056:-1), #, (5164:-1), #, (5165:-1), #, (5184:-1), #, (5189:-1), #, (5197:-1), #, (5198:-1), #, (5199:-1), #, (5220:-1), #, (5229:-1), #, (5235:-1), #, (5236:-1), #, (5237:-1), #, (6259:-1), #, (6275:-1), #, (6276:-1), #, (6277:-1), #, (6278:-1), #, (6283:-1), #, (6290:-1), #, (6293:-1), #, (6305:-1), #, (6345:-1), #, (6346:-1), #, (6348:-1), #, (6353:-1), #, (6367:-1), #, (6369:-1), #, (6370:-1), #, (6481:-1), #, (6483:-1), #, (6519:-1), #, (6520:-1), #, (6550:-1), #, (6555:-1), #, (6557:-1), #, (6562:-1), #, (6586:-1), #, (6649:-1), #, (6652:-1), #, (6697:-1), #, (6699:-1), #, (6705:-1), #, (6708:-1), #, (6720:-1), #, (6725:-1), #, (6728:-1), #, (6731:-1), #, (6265:-1), #, (6451:-1), #, (6491:-1), #, (6494:-1), #, (6537:-1), #, (6613:-1), #, (6746:-1), #, (6747:-1), #, (6749:-1), #, (6750:-1), #, (6753:-1), #, (6780:-1), #, (6786:-1), #, (6827:-1), #, (6836:-1), #, (6854:-1), #, (6855:-1), #, (6442:-1), #, (6310:-1), #, (6337:-1), #, (6338:-1), #, (6339:-1), #, (6580:-1), #, (6865:-1), #, (6347:-1), #, (6271:-1), #, (6272:-1), #, (6273:-1), #, (6274:-1), #, (6341:-1), #, (6344:-1), #, (6349:-1), #, (6350:-1), #, (6445:-1), #, (6446:-1), #, (6739:-1), #, (6766:-1), #, (6866:-1), #, (6869:-1), #, (6879:-1), #, (6909:-1), #, (6932:-1), #, (6933:-1), #, (6934:-1), #, (6936:-1), #, (6938:-1), #, (6835:-1), #, (6314:-1), #, (6315:-1), #, (6316:-1), #, (6365:-1), #, (6366:-1), #, (6571:-1), #, (6573:-1), #, (6574:-1), #, (6590:-1), #, (6789:-1), #, (6800:-1), #, (6802:-1), #, (6910:-1), #, (6911:-1), #, (6930:-1), #, (6935:-1), #, (6943:-1), #, (6944:-1), #, (6945:-1), #, (6966:-1), #, (6975:-1), #, (6981:-1), #, (6982:-1), #, (6983:-1), #, (6576:-1)
num_wait = 427
num_chgs = 2143
chg_time = 0.594747
chk_time = 2.417570
inc_time = 1.066001
dfs_time = 0.852368
mod_time = 0.007872
ntp_time = 0.000000
cex_count = 0
@@@M77980@@@
@@@T4250@@@
