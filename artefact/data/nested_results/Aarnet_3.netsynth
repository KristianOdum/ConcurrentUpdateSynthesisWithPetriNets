[flattening model]
[performing NNF]
>>> set max_rules = 1, num bits = 1, mask = 1
[generating graph: 0]
[[start graph timer]]
[[end graph timer]]
[[start synthesis timer: 1612375124.308152]]
[using checkers: mc = ]
[start initial model checking]
[finish initial model checking]
[Answer: different order]
[[stop synthesis timer: 1612375125.097981]]
[finished synthesizing update (0.801558 s)]
[------------------]
(750:-1), #, (751:-1), #, (752:-1), #, (763:-1), #, (764:-1), #, (775:-1), #, (776:-1), #, (778:-1), #, (781:-1), #, (782:-1), #, (796:-1), #, (799:-1), #, (800:-1), #, (801:-1), #, (802:-1), #, (805:-1), #, (811:-1), #, (818:-1), #, (819:-1), #, (820:-1), #, (821:-1), #, (822:-1), #, (806:-1), #, (807:-1), #, (808:-1), #, (826:-1), #, (839:-1), #, (842:-1), #, (853:-1), #, (854:-1), #, (835:-1), #, (836:-1), #, (837:-1), #, (838:-1), #, (855:-1), #, (856:-1), #, (859:-1), #, (861:-1), #, (862:-1), #, (863:-1), #, (864:-1), #, (869:-1), #, (870:-1), #, (871:-1), #, (872:-1), #, (753:-1), #, (755:-1), #, (756:-1), #, (761:-1), #, (773:-1), #, (810:-1), #, (849:-1), #, (852:-1), #, (865:-1), #, (867:-1), #, (874:-1), #, (887:-1), #, (888:-1), #, (889:-1), #, (1640:-1), #, (1641:-1), #, (1642:-1), #, (1653:-1), #, (1654:-1), #, (1665:-1), #, (1666:-1), #, (1668:-1), #, (1671:-1), #, (1672:-1), #, (1686:-1), #, (1689:-1), #, (1690:-1), #, (1691:-1), #, (1692:-1), #, (1695:-1), #, (1701:-1), #, (1708:-1), #, (1709:-1), #, (1710:-1), #, (1711:-1), #, (1712:-1), #, (1696:-1), #, (1697:-1), #, (1698:-1), #, (1716:-1), #, (1729:-1), #, (1732:-1), #, (1743:-1), #, (1744:-1), #, (1725:-1), #, (1726:-1), #, (1727:-1), #, (1728:-1), #, (1745:-1), #, (1746:-1), #, (1749:-1), #, (1751:-1), #, (1752:-1), #, (1753:-1), #, (1754:-1), #, (1759:-1), #, (1760:-1), #, (1761:-1), #, (1762:-1), #, (1643:-1), #, (1645:-1), #, (1646:-1), #, (1651:-1), #, (1663:-1), #, (1700:-1), #, (1739:-1), #, (1742:-1), #, (1755:-1), #, (1757:-1), #, (1764:-1), #, (1777:-1), #, (1778:-1), #, (1779:-1), #, (2530:-1), #, (2531:-1), #, (2532:-1), #, (2543:-1), #, (2544:-1), #, (2555:-1), #, (2556:-1), #, (2558:-1), #, (2561:-1), #, (2562:-1), #, (2576:-1), #, (2579:-1), #, (2580:-1), #, (2581:-1), #, (2582:-1), #, (2585:-1), #, (2591:-1), #, (2598:-1), #, (2599:-1), #, (2600:-1), #, (2601:-1), #, (2602:-1), #, (2586:-1), #, (2587:-1), #, (2588:-1), #, (2606:-1), #, (2619:-1), #, (2622:-1), #, (2633:-1), #, (2634:-1), #, (2615:-1), #, (2616:-1), #, (2617:-1), #, (2618:-1), #, (2635:-1), #, (2636:-1), #, (2639:-1), #, (2641:-1), #, (2642:-1), #, (2643:-1), #, (2644:-1), #, (2649:-1), #, (2650:-1), #, (2651:-1), #, (2652:-1), #, (2533:-1), #, (2535:-1), #, (2536:-1), #, (2541:-1), #, (2553:-1), #, (2590:-1), #, (2629:-1), #, (2632:-1), #, (2645:-1), #, (2647:-1), #, (2654:-1), #, (2667:-1), #, (2668:-1), #, (2669:-1), #, (3420:-1), #, (3421:-1), #, (3422:-1), #, (3433:-1), #, (3434:-1), #, (3445:-1), #, (3446:-1), #, (3448:-1), #, (3451:-1), #, (3452:-1), #, (3466:-1), #, (3469:-1), #, (3470:-1), #, (3471:-1), #, (3472:-1), #, (3475:-1), #, (3481:-1), #, (3488:-1), #, (3489:-1), #, (3490:-1), #, (3491:-1), #, (3492:-1), #, (3476:-1), #, (3477:-1), #, (3478:-1), #, (3496:-1), #, (3509:-1), #, (3512:-1), #, (3523:-1), #, (3524:-1), #, (3505:-1), #, (3506:-1), #, (3507:-1), #, (3508:-1), #, (3526:-1), #, (3529:-1), #, (3531:-1), #, (3532:-1), #, (3533:-1), #, (3534:-1), #, (3539:-1), #, (3540:-1), #, (3541:-1), #, (3542:-1), #, (3423:-1), #, (3425:-1), #, (3426:-1), #, (3431:-1), #, (3443:-1), #, (3480:-1), #, (3519:-1), #, (3522:-1), #, (3535:-1), #, (3537:-1), #, (3544:-1), #, (3557:-1), #, (3558:-1), #, (3559:-1), #, (3525:-1)
num_wait = 235
num_chgs = 927
chg_time = 0.148156
chk_time = 0.555640
inc_time = 0.243564
dfs_time = 0.053716
mod_time = 0.005000
ntp_time = 0.000000
cex_count = 0
@@@M68952@@@
@@@T893@@@
