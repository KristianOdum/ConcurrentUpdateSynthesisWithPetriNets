[flattening model]
[performing NNF]
>>> set max_rules = 1, num bits = 1, mask = 1
[generating graph: 0]
[[start graph timer]]
[[end graph timer]]
[[start synthesis timer: 1612375268.575741]]
[using checkers: mc = ]
[start initial model checking]
[finish initial model checking]
[Answer: different order]
[[stop synthesis timer: 1612375271.706629]]
[finished synthesizing update (3.152022 s)]
[------------------]
(628:-1), #, (634:-1), #, (648:-1), #, (649:-1), #, (650:-1), #, (662:-1), #, (668:-1), #, (669:-1), #, (671:-1), #, (672:-1), #, (674:-1), #, (675:-1), #, (676:-1), #, (682:-1), #, (689:-1), #, (697:-1), #, (646:-1), #, (644:-1), #, (645:-1), #, (677:-1), #, (678:-1), #, (679:-1), #, (690:-1), #, (691:-1), #, (695:-1), #, (696:-1), #, (698:-1), #, (699:-1), #, (629:-1), #, (632:-1), #, (633:-1), #, (635:-1), #, (636:-1), #, (637:-1), #, (638:-1), #, (651:-1), #, (653:-1), #, (657:-1), #, (658:-1), #, (659:-1), #, (673:-1), #, (693:-1), #, (700:-1), #, (703:-1), #, (705:-1), #, (706:-1), #, (707:-1), #, (1336:-1), #, (1342:-1), #, (1356:-1), #, (1357:-1), #, (1358:-1), #, (1370:-1), #, (1376:-1), #, (1377:-1), #, (1379:-1), #, (1380:-1), #, (1382:-1), #, (1383:-1), #, (1384:-1), #, (1390:-1), #, (1397:-1), #, (1405:-1), #, (1354:-1), #, (1352:-1), #, (1353:-1), #, (1385:-1), #, (1386:-1), #, (1387:-1), #, (1398:-1), #, (1399:-1), #, (1403:-1), #, (1404:-1), #, (1406:-1), #, (1407:-1), #, (1337:-1), #, (1340:-1), #, (1341:-1), #, (1343:-1), #, (1344:-1), #, (1345:-1), #, (1346:-1), #, (1359:-1), #, (1361:-1), #, (1365:-1), #, (1366:-1), #, (1367:-1), #, (1381:-1), #, (1401:-1), #, (1408:-1), #, (1411:-1), #, (1413:-1), #, (1414:-1), #, (1415:-1), #, (2044:-1), #, (2050:-1), #, (2064:-1), #, (2065:-1), #, (2066:-1), #, (2078:-1), #, (2084:-1), #, (2085:-1), #, (2087:-1), #, (2088:-1), #, (2090:-1), #, (2091:-1), #, (2092:-1), #, (2098:-1), #, (2105:-1), #, (2113:-1), #, (2062:-1), #, (2060:-1), #, (2061:-1), #, (2093:-1), #, (2094:-1), #, (2095:-1), #, (2106:-1), #, (2107:-1), #, (2111:-1), #, (2112:-1), #, (2114:-1), #, (2115:-1), #, (2045:-1), #, (2048:-1), #, (2049:-1), #, (2051:-1), #, (2052:-1), #, (2053:-1), #, (2054:-1), #, (2067:-1), #, (2069:-1), #, (2073:-1), #, (2074:-1), #, (2075:-1), #, (2089:-1), #, (2109:-1), #, (2116:-1), #, (2119:-1), #, (2121:-1), #, (2122:-1), #, (2123:-1), #, (2752:-1), #, (2758:-1), #, (2772:-1), #, (2773:-1), #, (2774:-1), #, (2786:-1), #, (2792:-1), #, (2793:-1), #, (2795:-1), #, (2796:-1), #, (2798:-1), #, (2799:-1), #, (2800:-1), #, (2806:-1), #, (2813:-1), #, (2821:-1), #, (2770:-1), #, (2768:-1), #, (2769:-1), #, (2801:-1), #, (2802:-1), #, (2803:-1), #, (2814:-1), #, (2815:-1), #, (2819:-1), #, (2820:-1), #, (2822:-1), #, (2823:-1), #, (2753:-1), #, (2756:-1), #, (2757:-1), #, (2759:-1), #, (2760:-1), #, (2761:-1), #, (2762:-1), #, (2775:-1), #, (2777:-1), #, (2781:-1), #, (2782:-1), #, (2783:-1), #, (2797:-1), #, (2817:-1), #, (2824:-1), #, (2827:-1), #, (2829:-1), #, (2830:-1), #, (2831:-1), #, (3460:-1), #, (3466:-1), #, (3480:-1), #, (3481:-1), #, (3482:-1), #, (3494:-1), #, (3500:-1), #, (3501:-1), #, (3503:-1), #, (3504:-1), #, (3506:-1), #, (3507:-1), #, (3508:-1), #, (3514:-1), #, (3521:-1), #, (3529:-1), #, (3478:-1), #, (3476:-1), #, (3477:-1), #, (3509:-1), #, (3510:-1), #, (3511:-1), #, (3522:-1), #, (3523:-1), #, (3527:-1), #, (3528:-1), #, (3530:-1), #, (3531:-1), #, (3461:-1), #, (3464:-1), #, (3465:-1), #, (3467:-1), #, (3468:-1), #, (3469:-1), #, (3470:-1), #, (3483:-1), #, (3485:-1), #, (3489:-1), #, (3490:-1), #, (3491:-1), #, (3505:-1), #, (3525:-1), #, (3532:-1), #, (3535:-1), #, (3537:-1), #, (3538:-1), #, (3539:-1), #, (4168:-1), #, (4174:-1), #, (4188:-1), #, (4189:-1), #, (4190:-1), #, (4202:-1), #, (4208:-1), #, (4209:-1), #, (4211:-1), #, (4212:-1), #, (4214:-1), #, (4215:-1), #, (4216:-1), #, (4222:-1), #, (4229:-1), #, (4237:-1), #, (4186:-1), #, (4184:-1), #, (4185:-1), #, (4217:-1), #, (4218:-1), #, (4219:-1), #, (4230:-1), #, (4231:-1), #, (4235:-1), #, (4236:-1), #, (4238:-1), #, (4239:-1), #, (4169:-1), #, (4172:-1), #, (4173:-1), #, (4175:-1), #, (4176:-1), #, (4177:-1), #, (4178:-1), #, (4191:-1), #, (4193:-1), #, (4197:-1), #, (4198:-1), #, (4199:-1), #, (4213:-1), #, (4233:-1), #, (4240:-1), #, (4243:-1), #, (4245:-1), #, (4246:-1), #, (4247:-1), #, (4876:-1), #, (4882:-1), #, (4896:-1), #, (4897:-1), #, (4898:-1), #, (4910:-1), #, (4916:-1), #, (4917:-1), #, (4919:-1), #, (4920:-1), #, (4922:-1), #, (4923:-1), #, (4924:-1), #, (4930:-1), #, (4937:-1), #, (4945:-1), #, (4894:-1), #, (4892:-1), #, (4893:-1), #, (4925:-1), #, (4926:-1), #, (4927:-1), #, (4938:-1), #, (4939:-1), #, (4943:-1), #, (4944:-1), #, (4946:-1), #, (4947:-1), #, (4877:-1), #, (4880:-1), #, (4881:-1), #, (4883:-1), #, (4884:-1), #, (4885:-1), #, (4886:-1), #, (4899:-1), #, (4901:-1), #, (4905:-1), #, (4906:-1), #, (4907:-1), #, (4921:-1), #, (4941:-1), #, (4948:-1), #, (4951:-1), #, (4953:-1), #, (4954:-1), #, (4955:-1), #, (5584:-1), #, (5590:-1), #, (5604:-1), #, (5605:-1), #, (5606:-1), #, (5624:-1), #, (5625:-1), #, (5627:-1), #, (5628:-1), #, (5630:-1), #, (5631:-1), #, (5632:-1), #, (5638:-1), #, (5645:-1), #, (5653:-1), #, (5602:-1), #, (5600:-1), #, (5601:-1), #, (5633:-1), #, (5634:-1), #, (5635:-1), #, (5646:-1), #, (5647:-1), #, (5651:-1), #, (5652:-1), #, (5654:-1), #, (5655:-1), #, (5585:-1), #, (5588:-1), #, (5589:-1), #, (5591:-1), #, (5592:-1), #, (5593:-1), #, (5594:-1), #, (5607:-1), #, (5609:-1), #, (5613:-1), #, (5614:-1), #, (5615:-1), #, (5629:-1), #, (5649:-1), #, (5656:-1), #, (5659:-1), #, (5661:-1), #, (5662:-1), #, (5663:-1), #, (5618:-1)
num_wait = 375
num_chgs = 2127
chg_time = 0.486259
chk_time = 1.975811
inc_time = 0.917594
dfs_time = 0.499457
mod_time = 0.019070
ntp_time = 0.000000
cex_count = 0
@@@M71188@@@
@@@T3267@@@
