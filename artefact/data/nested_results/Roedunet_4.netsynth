[flattening model]
[performing NNF]
>>> set max_rules = 1, num bits = 1, mask = 1
[generating graph: 0]
[[start graph timer]]
[[end graph timer]]
[[start synthesis timer: 1612375917.195946]]
[using checkers: mc = ]
[start initial model checking]
[finish initial model checking]
[Answer: different order]
[[stop synthesis timer: 1612375918.868698]]
[finished synthesizing update (1.694621 s)]
[------------------]
(686:-1), #, (697:-1), #, (698:-1), #, (700:-1), #, (706:-1), #, (713:-1), #, (734:-1), #, (739:-1), #, (740:-1), #, (744:-1), #, (761:-1), #, (762:-1), #, (763:-1), #, (775:-1), #, (780:-1), #, (783:-1), #, (784:-1), #, (785:-1), #, (724:-1), #, (760:-1), #, (786:-1), #, (789:-1), #, (790:-1), #, (793:-1), #, (794:-1), #, (802:-1), #, (803:-1), #, (813:-1), #, (817:-1), #, (675:-1), #, (676:-1), #, (688:-1), #, (693:-1), #, (722:-1), #, (737:-1), #, (738:-1), #, (797:-1), #, (798:-1), #, (799:-1), #, (800:-1), #, (801:-1), #, (804:-1), #, (814:-1), #, (818:-1), #, (819:-1), #, (820:-1), #, (1507:-1), #, (1518:-1), #, (1519:-1), #, (1521:-1), #, (1527:-1), #, (1534:-1), #, (1555:-1), #, (1560:-1), #, (1561:-1), #, (1565:-1), #, (1582:-1), #, (1583:-1), #, (1584:-1), #, (1596:-1), #, (1601:-1), #, (1604:-1), #, (1605:-1), #, (1606:-1), #, (1545:-1), #, (1581:-1), #, (1607:-1), #, (1610:-1), #, (1611:-1), #, (1614:-1), #, (1615:-1), #, (1623:-1), #, (1624:-1), #, (1634:-1), #, (1638:-1), #, (1496:-1), #, (1497:-1), #, (1509:-1), #, (1514:-1), #, (1543:-1), #, (1558:-1), #, (1559:-1), #, (1618:-1), #, (1619:-1), #, (1620:-1), #, (1621:-1), #, (1622:-1), #, (1625:-1), #, (1635:-1), #, (1639:-1), #, (1640:-1), #, (1641:-1), #, (2328:-1), #, (2339:-1), #, (2340:-1), #, (2342:-1), #, (2348:-1), #, (2355:-1), #, (2376:-1), #, (2381:-1), #, (2382:-1), #, (2386:-1), #, (2403:-1), #, (2404:-1), #, (2405:-1), #, (2417:-1), #, (2422:-1), #, (2425:-1), #, (2426:-1), #, (2427:-1), #, (2366:-1), #, (2402:-1), #, (2428:-1), #, (2431:-1), #, (2432:-1), #, (2435:-1), #, (2436:-1), #, (2444:-1), #, (2445:-1), #, (2455:-1), #, (2459:-1), #, (2317:-1), #, (2318:-1), #, (2330:-1), #, (2335:-1), #, (2364:-1), #, (2379:-1), #, (2380:-1), #, (2439:-1), #, (2440:-1), #, (2441:-1), #, (2442:-1), #, (2443:-1), #, (2446:-1), #, (2456:-1), #, (2460:-1), #, (2461:-1), #, (2462:-1), #, (3149:-1), #, (3160:-1), #, (3161:-1), #, (3163:-1), #, (3169:-1), #, (3176:-1), #, (3197:-1), #, (3202:-1), #, (3203:-1), #, (3207:-1), #, (3224:-1), #, (3225:-1), #, (3226:-1), #, (3238:-1), #, (3243:-1), #, (3246:-1), #, (3247:-1), #, (3248:-1), #, (3187:-1), #, (3223:-1), #, (3249:-1), #, (3252:-1), #, (3253:-1), #, (3256:-1), #, (3257:-1), #, (3265:-1), #, (3266:-1), #, (3276:-1), #, (3280:-1), #, (3138:-1), #, (3139:-1), #, (3151:-1), #, (3156:-1), #, (3185:-1), #, (3200:-1), #, (3201:-1), #, (3260:-1), #, (3261:-1), #, (3262:-1), #, (3263:-1), #, (3264:-1), #, (3267:-1), #, (3277:-1), #, (3281:-1), #, (3282:-1), #, (3283:-1), #, (3970:-1), #, (3981:-1), #, (3982:-1), #, (3984:-1), #, (3990:-1), #, (3997:-1), #, (4018:-1), #, (4023:-1), #, (4024:-1), #, (4028:-1), #, (4045:-1), #, (4046:-1), #, (4047:-1), #, (4059:-1), #, (4064:-1), #, (4067:-1), #, (4068:-1), #, (4069:-1), #, (4008:-1), #, (4044:-1), #, (4070:-1), #, (4073:-1), #, (4074:-1), #, (4077:-1), #, (4078:-1), #, (4086:-1), #, (4087:-1), #, (4097:-1), #, (4101:-1), #, (3959:-1), #, (3960:-1), #, (3972:-1), #, (3977:-1), #, (4006:-1), #, (4021:-1), #, (4022:-1), #, (4081:-1), #, (4082:-1), #, (4083:-1), #, (4084:-1), #, (4085:-1), #, (4088:-1), #, (4098:-1), #, (4102:-1), #, (4103:-1), #, (4104:-1), #, (4791:-1), #, (4802:-1), #, (4803:-1), #, (4805:-1), #, (4811:-1), #, (4818:-1), #, (4839:-1), #, (4844:-1), #, (4845:-1), #, (4849:-1), #, (4866:-1), #, (4867:-1), #, (4868:-1), #, (4880:-1), #, (4885:-1), #, (4888:-1), #, (4889:-1), #, (4890:-1), #, (4829:-1), #, (4865:-1), #, (4891:-1), #, (4894:-1), #, (4895:-1), #, (4898:-1), #, (4899:-1), #, (4907:-1), #, (4908:-1), #, (4918:-1), #, (4922:-1), #, (4780:-1), #, (4781:-1), #, (4793:-1), #, (4798:-1), #, (4827:-1), #, (4842:-1), #, (4843:-1), #, (4902:-1), #, (4903:-1), #, (4904:-1), #, (4905:-1), #, (4906:-1), #, (4909:-1), #, (4919:-1), #, (4923:-1), #, (4924:-1), #, (4925:-1), #, (5612:-1), #, (5623:-1), #, (5624:-1), #, (5626:-1), #, (5632:-1), #, (5639:-1), #, (5660:-1), #, (5665:-1), #, (5666:-1), #, (5670:-1), #, (5687:-1), #, (5688:-1), #, (5689:-1), #, (5701:-1), #, (5706:-1), #, (5709:-1), #, (5710:-1), #, (5711:-1), #, (5650:-1), #, (5686:-1), #, (5712:-1), #, (5715:-1), #, (5716:-1), #, (5719:-1), #, (5720:-1), #, (5728:-1), #, (5729:-1), #, (5739:-1), #, (5743:-1), #, (5601:-1), #, (5602:-1), #, (5614:-1), #, (5619:-1), #, (5648:-1), #, (5663:-1), #, (5664:-1), #, (5723:-1), #, (5724:-1), #, (5725:-1), #, (5726:-1), #, (5727:-1), #, (5730:-1), #, (5740:-1), #, (5744:-1), #, (5745:-1), #, (5746:-1), #, (6433:-1), #, (6444:-1), #, (6445:-1), #, (6447:-1), #, (6453:-1), #, (6481:-1), #, (6486:-1), #, (6487:-1), #, (6491:-1), #, (6508:-1), #, (6509:-1), #, (6510:-1), #, (6522:-1), #, (6527:-1), #, (6530:-1), #, (6531:-1), #, (6532:-1), #, (6471:-1), #, (6507:-1), #, (6533:-1), #, (6536:-1), #, (6537:-1), #, (6540:-1), #, (6541:-1), #, (6549:-1), #, (6550:-1), #, (6560:-1), #, (6564:-1), #, (6422:-1), #, (6423:-1), #, (6435:-1), #, (6440:-1), #, (6469:-1), #, (6484:-1), #, (6485:-1), #, (6544:-1), #, (6545:-1), #, (6546:-1), #, (6547:-1), #, (6548:-1), #, (6551:-1), #, (6561:-1), #, (6565:-1), #, (6566:-1), #, (6567:-1), #, (6460:-1)
num_wait = 367
num_chgs = 1343
chg_time = 0.297070
chk_time = 1.104391
inc_time = 0.475606
dfs_time = 0.175354
mod_time = 0.022177
ntp_time = 0.000000
cex_count = 0
@@@M71064@@@
@@@T2238@@@
