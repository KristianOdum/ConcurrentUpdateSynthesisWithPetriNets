[flattening model]
[performing NNF]
>>> set max_rules = 1, num bits = 1, mask = 1
[generating graph: 0]
[[start graph timer]]
[[end graph timer]]
[[start synthesis timer: 1612375869.336476]]
[using checkers: mc = ]
[start initial model checking]
[finish initial model checking]
[Answer: different order]
[[stop synthesis timer: 1612375870.601082]]
[finished synthesizing update (1.283947 s)]
[------------------]
(703:-1), #, (705:-1), #, (706:-1), #, (708:-1), #, (713:-1), #, (714:-1), #, (743:-1), #, (744:-1), #, (753:-1), #, (754:-1), #, (755:-1), #, (772:-1), #, (773:-1), #, (775:-1), #, (717:-1), #, (740:-1), #, (749:-1), #, (787:-1), #, (788:-1), #, (801:-1), #, (803:-1), #, (802:-1), #, (724:-1), #, (795:-1), #, (800:-1), #, (818:-1), #, (819:-1), #, (804:-1), #, (721:-1), #, (746:-1), #, (747:-1), #, (758:-1), #, (761:-1), #, (767:-1), #, (769:-1), #, (771:-1), #, (782:-1), #, (784:-1), #, (785:-1), #, (791:-1), #, (805:-1), #, (810:-1), #, (812:-1), #, (1523:-1), #, (1525:-1), #, (1526:-1), #, (1528:-1), #, (1533:-1), #, (1534:-1), #, (1563:-1), #, (1564:-1), #, (1573:-1), #, (1574:-1), #, (1575:-1), #, (1592:-1), #, (1593:-1), #, (1595:-1), #, (1537:-1), #, (1560:-1), #, (1569:-1), #, (1607:-1), #, (1608:-1), #, (1621:-1), #, (1623:-1), #, (1622:-1), #, (1544:-1), #, (1615:-1), #, (1620:-1), #, (1638:-1), #, (1639:-1), #, (1624:-1), #, (1541:-1), #, (1566:-1), #, (1567:-1), #, (1578:-1), #, (1581:-1), #, (1587:-1), #, (1589:-1), #, (1591:-1), #, (1602:-1), #, (1604:-1), #, (1605:-1), #, (1611:-1), #, (1625:-1), #, (1630:-1), #, (1632:-1), #, (2343:-1), #, (2345:-1), #, (2346:-1), #, (2348:-1), #, (2353:-1), #, (2354:-1), #, (2383:-1), #, (2384:-1), #, (2393:-1), #, (2394:-1), #, (2395:-1), #, (2412:-1), #, (2413:-1), #, (2415:-1), #, (2357:-1), #, (2380:-1), #, (2389:-1), #, (2427:-1), #, (2428:-1), #, (2441:-1), #, (2443:-1), #, (2442:-1), #, (2364:-1), #, (2435:-1), #, (2440:-1), #, (2458:-1), #, (2459:-1), #, (2444:-1), #, (2361:-1), #, (2386:-1), #, (2387:-1), #, (2398:-1), #, (2401:-1), #, (2407:-1), #, (2409:-1), #, (2411:-1), #, (2422:-1), #, (2424:-1), #, (2425:-1), #, (2431:-1), #, (2445:-1), #, (2450:-1), #, (2452:-1), #, (3163:-1), #, (3165:-1), #, (3166:-1), #, (3168:-1), #, (3173:-1), #, (3174:-1), #, (3203:-1), #, (3204:-1), #, (3213:-1), #, (3214:-1), #, (3215:-1), #, (3232:-1), #, (3233:-1), #, (3235:-1), #, (3177:-1), #, (3200:-1), #, (3209:-1), #, (3247:-1), #, (3248:-1), #, (3261:-1), #, (3263:-1), #, (3262:-1), #, (3184:-1), #, (3255:-1), #, (3260:-1), #, (3278:-1), #, (3279:-1), #, (3264:-1), #, (3181:-1), #, (3206:-1), #, (3207:-1), #, (3218:-1), #, (3221:-1), #, (3227:-1), #, (3229:-1), #, (3231:-1), #, (3242:-1), #, (3244:-1), #, (3245:-1), #, (3251:-1), #, (3265:-1), #, (3270:-1), #, (3272:-1), #, (3983:-1), #, (3985:-1), #, (3986:-1), #, (3988:-1), #, (3993:-1), #, (3994:-1), #, (4023:-1), #, (4024:-1), #, (4033:-1), #, (4034:-1), #, (4035:-1), #, (4052:-1), #, (4053:-1), #, (4055:-1), #, (3997:-1), #, (4020:-1), #, (4029:-1), #, (4067:-1), #, (4068:-1), #, (4081:-1), #, (4083:-1), #, (4082:-1), #, (4004:-1), #, (4075:-1), #, (4080:-1), #, (4098:-1), #, (4099:-1), #, (4084:-1), #, (4001:-1), #, (4026:-1), #, (4027:-1), #, (4038:-1), #, (4041:-1), #, (4047:-1), #, (4049:-1), #, (4051:-1), #, (4062:-1), #, (4064:-1), #, (4065:-1), #, (4071:-1), #, (4085:-1), #, (4090:-1), #, (4092:-1), #, (4803:-1), #, (4805:-1), #, (4806:-1), #, (4808:-1), #, (4813:-1), #, (4814:-1), #, (4843:-1), #, (4844:-1), #, (4853:-1), #, (4854:-1), #, (4855:-1), #, (4872:-1), #, (4873:-1), #, (4875:-1), #, (4817:-1), #, (4840:-1), #, (4849:-1), #, (4887:-1), #, (4888:-1), #, (4901:-1), #, (4903:-1), #, (4902:-1), #, (4824:-1), #, (4895:-1), #, (4900:-1), #, (4918:-1), #, (4919:-1), #, (4904:-1), #, (4821:-1), #, (4846:-1), #, (4847:-1), #, (4858:-1), #, (4861:-1), #, (4867:-1), #, (4869:-1), #, (4871:-1), #, (4882:-1), #, (4884:-1), #, (4885:-1), #, (4891:-1), #, (4905:-1), #, (4910:-1), #, (4912:-1), #, (5623:-1), #, (5625:-1), #, (5626:-1), #, (5628:-1), #, (5633:-1), #, (5634:-1), #, (5663:-1), #, (5664:-1), #, (5673:-1), #, (5674:-1), #, (5675:-1), #, (5692:-1), #, (5693:-1), #, (5695:-1), #, (5637:-1), #, (5660:-1), #, (5669:-1), #, (5707:-1), #, (5708:-1), #, (5721:-1), #, (5723:-1), #, (5722:-1), #, (5644:-1), #, (5715:-1), #, (5720:-1), #, (5738:-1), #, (5739:-1), #, (5724:-1), #, (5641:-1), #, (5666:-1), #, (5667:-1), #, (5678:-1), #, (5681:-1), #, (5687:-1), #, (5689:-1), #, (5691:-1), #, (5702:-1), #, (5704:-1), #, (5705:-1), #, (5711:-1), #, (5725:-1), #, (5730:-1), #, (5732:-1), #, (6443:-1), #, (6445:-1), #, (6446:-1), #, (6448:-1), #, (6453:-1), #, (6454:-1), #, (6483:-1), #, (6484:-1), #, (6493:-1), #, (6494:-1), #, (6495:-1), #, (6512:-1), #, (6513:-1), #, (6515:-1), #, (6457:-1), #, (6480:-1), #, (6489:-1), #, (6527:-1), #, (6528:-1), #, (6543:-1), #, (6542:-1), #, (6464:-1), #, (6535:-1), #, (6540:-1), #, (6558:-1), #, (6559:-1), #, (6544:-1), #, (6461:-1), #, (6486:-1), #, (6487:-1), #, (6498:-1), #, (6501:-1), #, (6507:-1), #, (6509:-1), #, (6511:-1), #, (6522:-1), #, (6524:-1), #, (6525:-1), #, (6531:-1), #, (6545:-1), #, (6550:-1), #, (6552:-1), #, (6541:-1)
num_wait = 343
num_chgs = 1263
chg_time = 0.218899
chk_time = 0.825398
inc_time = 0.353373
dfs_time = 0.143486
mod_time = 0.020564
ntp_time = 0.000000
cex_count = 0
@@@M71208@@@
@@@T1824@@@
