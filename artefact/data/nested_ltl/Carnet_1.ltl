switch 1291 (in1291s,out1291s,out1291s_2) [] {
 rule in1291s => out1291s []
 }
 final {
 rule in1291s => out1291s_2 []
 }
switch 1292 (in1292s,out1292s,out1292s_2) [] {
 rule in1292s => out1292s []
 }
 final {
 rule in1292s => out1292s_2 []
 }
switch 1332 (in1332s,out1332s,out1332s_2) [] {
 rule in1332s => out1332s []
 }
 final {
 rule in1332s => out1332s_2 []
 }
switch 1273 (in1273s,out1273s) [] {
 rule in1273s => out1273s []
 }
 final {
     
 }
switch 1283 (in1283s,out1283s,out1283s_2) [] {
 rule in1283s => out1283s []
 }
 final {
 rule in1283s => out1283s_2 []
 }
switch 1340 (in1340s,out1340s) [] {
 rule in1340s => out1340s []
 }
 final {
     
 }
switch 1344 (in1344s,out1344s) [] {
 rule in1344s => out1344s []
 }
 final {
     
 }
switch 1343 (in1343s,out1343s) [] {
 rule in1343s => out1343s []
 }
 final {
     
 }
switch 1281 (in1281s,out1281s) [] {
 rule in1281s => out1281s []
 }
 final {
     
 }
switch 1276 (in1276s,out1276s) [] {
 rule in1276s => out1276s []
 }
 final {
     
 }
switch 1275 (in1275s,out1275s) [] {
 rule in1275s => out1275s []
 }
 final {
     
 }
switch 1279 (in1279s,out1279s) [] {
 rule in1279s => out1279s []
 }
 final {
     
 }
switch 1280 (in1280s,out1280s) [] {
 rule in1280s => out1280s []
 }
 final {
     
 }
switch 1311 (in1311s,out1311s) [] {
 rule in1311s => out1311s []
 }
 final {
     
 }
switch 1310 (in1310s,out1310s,out1310s_2) [] {
 rule in1310s => out1310s []
 }
 final {
 rule in1310s => out1310s_2 []
 }
switch 1298 (in1298s,out1298s,out1298s_2) [] {
 rule in1298s => out1298s []
 }
 final {
 rule in1298s => out1298s_2 []
 }
switch 1333 (in1333s,out1333s_2) [] {

 }
 final {
 rule in1333s => out1333s_2 []
 }
switch 1284 (in1284s,out1284s_2) [] {

 }
 final {
 rule in1284s => out1284s_2 []
 }
switch 1318 (in1318s,out1318s_2) [] {

 }
 final {
 rule in1318s => out1318s_2 []
 }
switch 1286 (in1286s,out1286s_2) [] {

 }
 final {
 rule in1286s => out1286s_2 []
 }
switch 1320 (in1320s,out1320s_2) [] {

 }
 final {
 rule in1320s => out1320s_2 []
 }
switch 1288 (in1288s,out1288s_2) [] {

 }
 final {
 rule in1288s => out1288s_2 []
 }
switch 1312 (in1312s,out1312s_2) [] {

 }
 final {
 rule in1312s => out1312s_2 []
 }
switch 1313 (in1313s,out1313s_2) [] {

 }
 final {
 rule in1313s => out1313s_2 []
 }
switch 1303 (in1303s,out1303s) [] {
 rule in1303s => out1303s []
 }
 final {
 rule in1303s => out1303s []
 }
link  => in1291s []
link out1291s => in1292s []
link out1291s_2 => in1292s []
link out1292s => in1332s []
link out1292s_2 => in1332s []
link out1332s => in1273s []
link out1332s_2 => in1333s []
link out1273s => in1283s []
link out1283s => in1340s []
link out1283s_2 => in1318s []
link out1340s => in1344s []
link out1344s => in1343s []
link out1343s => in1281s []
link out1281s => in1276s []
link out1276s => in1275s []
link out1275s => in1279s []
link out1279s => in1280s []
link out1280s => in1311s []
link out1311s => in1310s []
link out1310s => in1298s []
link out1310s_2 => in1298s []
link out1298s => in1303s []
link out1298s_2 => in1303s []
link out1333s_2 => in1284s []
link out1284s_2 => in1283s []
link out1318s_2 => in1286s []
link out1286s_2 => in1320s []
link out1320s_2 => in1288s []
link out1288s_2 => in1312s []
link out1312s_2 => in1313s []
link out1313s_2 => in1310s []
spec
port=in1291s -> (!(port=out1303s) U ((port=in1283s) & (TRUE U (port=out1303s))))